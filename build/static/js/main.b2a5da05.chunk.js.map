{"version":3,"sources":["components/connectors.js","components/Navbar.js","connectors/NetworkConnector.ts","connectors/index.ts","components/Vault.js","components/RangeSlider.js","components/Gateway.js","hooks/useAuth.ts","components/App.js","App.js","serviceWorker.js","index.js"],"names":["InjectedConnector","supportedChainIds","Navbar","props","react_default","a","createElement","class","data-multi-switch","data-menuanchor","href","onClick","undefined","account","onPresentConnectModal","onPresentAccountModal","RequestError","message","code","data","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Error","MiniRpcProvider","chainId","url","batchWaitTimeMs","_this2","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","asyncToGenerator","regenerator_default","mark","_callee","response","json","byKey","_iterator","_step","_result","_byKey$_result$id","resolve","reject","method","wrap","_context","prev","next","console","info","fetch","headers","content-type","accept","body","JSON","stringify","map","item","request","sent","t0","forEach","_ref2","abrupt","ok","_ref3","concat","status","statusText","t1","_ref4","reduce","memo","current","id","_createForOfIteratorHelper","s","n","done","result","value","error","err","e","f","stop","sendAsync","callback","params","then","jsonrpc","catch","_ref5","_callee2","promise","_context2","toString","Promise","push","setTimeout","_x","_x2","apply","arguments","parsed","URL","pathname","NetworkConnector","_AbstractConnector","_ref6","_this3","urls","defaultChainId","invariant","keys","length","k","Number","providers","currentChainId","accumulator","inherits","createClass","key","_activate","_callee3","_context3","provider","_getProvider","_callee4","_context4","_getChainId","_callee5","_context5","_getAccount","_callee6","_context6","get","AbstractConnector","NETWORK_URL","NETWORK_CHAIN_ID","parseInt","defineProperty","injected","bscConnector","WalletConnectProvider","bridge","rpc","56","97","qrcode","BscConnector","walletconnect","WalletConnectConnector","connectorsByName","WalletLinkConnector","appName","appLogoUrl","_connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","Vault","_React$useState","React","useState","_React$useState2","slicedToArray","setNetworkId","_React$useState3","_React$useState4","devilToken","setDevilToken","_React$useState5","_React$useState6","setDevilTokenAddress","_React$useState7","_React$useState8","_React$useState9","_React$useState10","_React$useState11","_React$useState12","_React$useState13","_React$useState14","devilVault","setDevilVault","_React$useState15","_React$useState16","setDevilVaultAddress","_React$useState17","_React$useState18","devilTokenBalance","setDevilTokenBalance","_React$useState19","_React$useState20","_React$useState21","_React$useState22","_React$useState23","_React$useState24","amountStaked","setAmountStaked","_React$useState25","_React$useState26","_React$useState27","_React$useState28","globalStakingBalance","setGlobalStakingBalance","_React$useState29","_React$useState30","_React$useState31","_React$useState32","_useState","_useState2","_React$useState33","_React$useState34","updateState","setUpdateState","_React$useState35","_React$useState36","web3Enabled","setWeb3Enabled","_React$useState37","useRef","_React$useState38","pendingUserRewardsBusd","setPendingUserRewardsBusd","_React$useState39","_React$useState40","pendingUserRewardsDevl","setPendingUserRewardsDevl","_React$useState41","_React$useState42","inputValue","setInputValue","update","_update","web3","window","eth","Contract","DevilVaultAbi","log","DevilTokenAbi","methods","balanceOf","getUserStaked","getTotalStaked","earnedBusd","earnedDevl","init","useEffect","Web3","currentProvider","walletConnectProvider","_ref","_networkId","_devilVault","_devilToken","_devilTokenBalance","_amountStaked","_globalStakingBalance","_pendingUserRewardsBusd","_pendingUserRewardsDevl","net","getId","networkId","events","Staked","fromBlock","on","event","Withdrawn","RewardPaidBusd","RewardPaidDevl","RewardAddedBusd","stakeTokensVault","amount","utils","toWei","approve","_address","send","from","once","receipt","stake","unstakeTokensVault","withdraw","hash","claimRewards","claim","isBrowser","src","alt","width","height","style","textAlign","data-np-checked","type","onChange","target","className","preventDefault","fromWei","Gateway","devilGateway","setDevilGateway","devilGatewayAddress","setDevilGatewayAddress","ethBalance","setEthBalance","inputValueBuy","setInputValueBuy","inputValueSell","setInputValueSell","setData","price","setPrice","APIKEY","getTokenBalance","_getTokenBalance","contract","getBalance","_devilGateway","DevilGatewayAbi","axios","res","market_data","current_price","usd","DEVLPurchased","DEVLSold","buyDevl","sendTransaction","to","sellDevl","gasLimit","data-modal-trigger","parseFloat","toFixed","div","tabindex","role","boxShadow","borderRadius","margin","color","widget_dist_default","defaultAmount","API_KEY","filters","onlyCryptos","data-dismiss","aria-label","aria-hidden","useAuth","_useWeb3React","useWeb3React","activate","deactivate","toastError","_len","args","Array","_key","alert","join","login","useCallback","connectorID","connector","localStorage","removeItem","connectorLocalStorageKey","UnsupportedChainIdError","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","name","logout","App","_useAuth","_useWalletModal","useWalletModal","Fragment","components_Navbar","data-toggle","components_Gateway","components_Vault","getLibrary","SCTheme","dark","zIndices","modal","core_esm","styled_components_browser_esm","theme","index_esm","App_App","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8n2BAGwB,IAAIA,IAAkB,CAC5CC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,KAAM,KAAO,MCiEpCC,MAjEf,SAAgBC,GACd,OACEC,EAAAC,EAAAC,cAAA,UAAQC,MAAM,0BACZH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,oBACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBACTH,EAAAC,EAAAC,cAAA,UACEC,MAAM,gBACNC,oBAAkB,kFAEpBJ,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eACTH,EAAAC,EAAAC,cAAA,2BAGFF,EAAAC,EAAAC,cAAA,UAEAF,EAAAC,EAAAC,cAAA,YAGJF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,8BACTH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,uDACRH,EAAAC,EAAAC,cAAA,MACEC,MAAM,8BACNE,kBAAgB,aAEhBL,EAAAC,EAAAC,cAAA,KAAGC,MAAM,8BAA8BG,KAAK,cAA5C,WAMNN,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,mBACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wBACTH,EAAAC,EAAAC,cAAA,UACEC,MAAM,qDACNC,oBAAkB,+GAEpBJ,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eAETH,EAAAC,EAAAC,cAAA,UACEC,MAAM,aACNI,QAAS,gBACeC,IAAlBT,EAAMU,QACRV,EAAMW,wBAENX,EAAMY,0BAIRZ,EAAMU,QAA6B,IAAnB,iBAAwBV,EAAMU,osCCnC9DG,cACJ,SAAAA,EAAYC,EAAwBC,EAAqBC,GAAgB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAP,IACvEI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAL,GAAAU,KAAAH,KAAMN,KAD4BC,OAAqCE,EAAhBD,OAAgBC,yCADhDO,QAYrBC,EAmBJ,SAAAA,EAAYC,EAAiBC,EAAaC,GAA0B,IAAAC,EAAAT,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAK,GAAAL,KAlBpDU,YAAoB,EAkBgCV,KAhBpDM,aAgBoD,EAAAN,KAdpDO,SAcoD,EAAAP,KAZpDW,UAYoD,EAAAX,KAVpDY,UAUoD,EAAAZ,KARpDQ,qBAQoD,EAAAR,KAN5Da,OAAS,EAMmDb,KAJ5Dc,eAAuD,KAIKd,KAF5De,MAAqB,GAEuCf,KAUpDgB,WAVoDlB,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAUvC,SAAAC,IAAA,IAAAL,EAAAM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAZ,EAAApC,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC3BC,QAAQC,KAAK,iBAAkB3B,EAAKM,OAC5BA,EAAUN,EAAVM,MACRN,EAAKM,MAAQ,GACbN,EAAKK,eAAiB,KAJKkB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAORG,MAAM5B,EAAKF,IAAK,CAC/BuB,OAAQ,OACRQ,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,oBAEVC,KAAMC,KAAKC,UAAU5B,EAAM6B,IAAI,SAACC,GAAD,OAAUA,EAAKC,aAbvB,OAOzBzB,EAPyBW,EAAAe,KAAAf,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,SAgBzBjB,EAAMkC,QAAQ,SAAAC,GAAA,OACZrB,EADYqB,EAAGrB,QACR,IAAIzB,MAAM,gCAjBM4B,EAAAmB,OAAA,qBAsBtB9B,EAAS+B,GAtBa,CAAApB,EAAAE,KAAA,gBAuBzBnB,EAAMkC,QAAQ,SAAAI,GAAA,OACZxB,EADYwB,EAAGxB,QAEb,IAAIpC,EAAJ,GAAA6D,OAAoBjC,EAASkC,OAA7B,MAAAD,OAAwCjC,EAASmC,aAAe,SAzB3CxB,EAAAmB,OAAA,yBAAAnB,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAiCZb,EAASC,OAjCG,QAiCzBA,EAjCyBU,EAAAe,KAAAf,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAAyB,GAAAzB,EAAA,UAmCzBjB,EAAMkC,QAAQ,SAAAS,GAAA,OACZ7B,EADY6B,EAAG7B,QACR,IAAIzB,MAAM,oCApCM4B,EAAAmB,OAAA,kBAwCrB5B,EAAQR,EAAM4C,OAAoC,SAACC,EAAMC,GAE7D,OADAD,EAAKC,EAAQf,QAAQgB,IAAMD,EACpBD,GACN,IA3CwBpC,EAAAuC,EA6CNzC,GA7CM,IA6C3B,IAAAE,EAAAwC,MAAAvC,EAAAD,EAAAyC,KAAAC,MAAWC,EAAgB1C,EAAA2C,MAAAzC,EAKrBJ,EAAM4C,EAAOL,IAHflC,EAFuBD,EAEvBC,QACAC,EAHuBF,EAGvBE,OACWC,EAJYH,EAIvBmB,QAAWhB,OAITF,GAAWC,IACT,UAAWsC,EACbtC,EACE,IAAIpC,EACF0E,EAAOE,MAAM3E,QACbyE,EAAOE,MAAM1E,KACbwE,EAAOE,MAAMzE,OAGR,WAAYuE,EACrBvC,EAAQuC,EAAOA,QAEftC,EACE,IAAIpC,EAAJ,4CAAA6D,OAC8CxB,EAD9C,cAEG,KACDqC,KArEiB,MAAAG,GAAA9C,EAAA+C,EAAAD,GAAA,QAAA9C,EAAAgD,IAAA,yBAAAxC,EAAAyC,SAAArD,EAAA,0BAVuCpB,KAuFpD0E,UAAY,SAC1B5B,EAMA6B,GAEAlE,EAAKqC,QAAQA,EAAQhB,OAAQgB,EAAQ8B,QAClCC,KAAK,SAACV,GAAD,OACJQ,EAAS,KAAM,CAAEG,QAAS,MAAOhB,GAAIhB,EAAQgB,GAAIK,aAElDY,MAAM,SAACV,GAAD,OAAWM,EAASN,EAAO,SApG8BrE,KAuGpD8C,QAvGoD,eAAAkC,EAAAlF,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAuG1C,SAAA8D,EACxBnD,EACA8C,GAFwB,IAAAM,EAAA,OAAAhE,EAAApC,EAAAiD,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,UAIF,kBAAXJ,EAJa,CAAAqD,EAAAjD,KAAA,eAAAiD,EAAAhC,OAAA,SAKf1C,EAAKqC,QAAQhB,EAAOA,OAAQA,EAAO8C,SALpB,UAOT,gBAAX9C,EAPoB,CAAAqD,EAAAjD,KAAA,eAAAiD,EAAAhC,OAAA,cAAAG,OAQV7C,EAAKH,QAAQ8E,SAAS,MARZ,cAUlBF,EAAU,IAAIG,QAAQ,SAACzD,EAASC,GACpCpB,EAAKM,MAAMuE,KAAK,CACdxC,QAAS,CACPgC,QAAS,MACThB,GAAIrD,EAAKI,SACTiB,SACA8C,UAEFhD,UACAC,aAGCpB,EAAKK,iBACRL,EAAKK,eAAiByE,WAAW9E,EAAKO,WAAYP,EAAKD,kBAvBjC2E,EAAAhC,OAAA,SAwBjB+B,GAxBiB,wBAAAC,EAAAV,SAAAQ,MAvG0C,gBAAAO,EAAAC,GAAA,OAAAT,EAAAU,MAAA1F,KAAA2F,YAAA,GAClE3F,KAAKM,QAAUA,EACfN,KAAKO,IAAMA,EACX,IAAMqF,EAAS,IAAIC,IAAItF,GACvBP,KAAKW,KAAOiF,EAAOjF,KACnBX,KAAKY,KAAOgF,EAAOE,SAEnB9F,KAAKQ,gBAAkB,IA4HduF,EAAb,SAAAC,GAKE,SAAAD,EAAAE,GAAiE,IAAAC,EAAnDC,EAAmDF,EAAnDE,KAAMC,EAA6CH,EAA7CG,eAA6C,OAAAtG,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,GAC/DM,YACED,GAA+C,IAA7BtG,OAAOwG,KAAKH,GAAMI,OACpC,sDAEFL,EAAApG,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiG,GAAA5F,KAAAH,KAAM,CACJtB,kBAAmBoB,OAAOwG,KAAKH,GAAMvD,IAAI,SAAC4D,GAAD,OAAeC,OAAOD,SAVlDE,eAIgD,EAAAR,EAFzDS,oBAEyD,EAS/DT,EAAKS,eAAiBP,GAAkBK,OAAO3G,OAAOwG,KAAKH,GAAM,IACjED,EAAKQ,UAAY5G,OAAOwG,KAAKH,GAAMxC,OAEhC,SAACiD,EAAatG,GAKf,OAJAsG,EAAYH,OAAOnG,IAAY,IAAID,EACjCoG,OAAOnG,GACP6F,EAAKM,OAAOnG,KAEPsG,GACN,IAlB4DV,EALnE,OAAApG,OAAA+G,EAAA,EAAA/G,CAAAiG,EAAAC,GAAAlG,OAAAgH,EAAA,EAAAhH,CAAAiG,EAAA,EAAAgB,IAAA,WAAA3C,MAAA,eAAA4C,EAAAlH,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAAA,SAAA8F,IAAA,OAAA/F,EAAApC,EAAAiD,KAAA,SAAAmF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,cAAAgF,EAAA/D,OAAA,SA+BW,CACLgE,SAAUnH,KAAK0G,UAAU1G,KAAK2G,gBAC9BrG,QAASN,KAAK2G,eACdrH,QAAS,OAlCf,wBAAA4H,EAAAzC,SAAAwC,EAAAjH,SAAA,yBAAAgH,EAAAtB,MAAA1F,KAAA2F,YAAA,KAAAoB,IAAA,cAAA3C,MAAA,eAAAgD,EAAAtH,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAAA,SAAAkG,IAAA,OAAAnG,EAAApC,EAAAiD,KAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,cAAAoF,EAAAnE,OAAA,SAuCWnD,KAAK0G,UAAU1G,KAAK2G,iBAvC/B,wBAAAW,EAAA7C,SAAA4C,EAAArH,SAAA,yBAAAoH,EAAA1B,MAAA1F,KAAA2F,YAAA,KAAAoB,IAAA,aAAA3C,MAAA,eAAAmD,EAAAzH,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAAA,SAAAqG,IAAA,OAAAtG,EAAApC,EAAAiD,KAAA,SAAA0F,GAAA,cAAAA,EAAAxF,KAAAwF,EAAAvF,MAAA,cAAAuF,EAAAtE,OAAA,SA2CWnD,KAAK2G,gBA3ChB,wBAAAc,EAAAhD,SAAA+C,EAAAxH,SAAA,yBAAAuH,EAAA7B,MAAA1F,KAAA2F,YAAA,KAAAoB,IAAA,aAAA3C,MAAA,eAAAsD,EAAA5H,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAAA,SAAAwG,IAAA,OAAAzG,EAAApC,EAAAiD,KAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,cAAA0F,EAAAzE,OAAA,SA+CW,MA/CX,wBAAAyE,EAAAnD,SAAAkD,MAAA,yBAAAD,EAAAhC,MAAA1F,KAAA2F,YAAA,KAAAoB,IAAA,aAAA3C,MAAA,WAmDI,OAAO,OAnDX,CAAA2C,IAAA,WAAAc,IAAA,WA2BI,OAAO7H,KAAK0G,UAAU1G,KAAK2G,oBA3B/BZ,EAAA,CAAsC+B,8BC9KhCC,EAAc,oCAEPC,EAA2BC,SAAS,MAQ1B,IAAIlC,EAAiB,CAC1CI,KAAKrG,OAAAoI,EAAA,EAAApI,CAAA,GAAIkI,EAAmBD,KAWvB,IAAMI,EAAW,IAAI1J,IAAkB,CAC5CC,kBAAmB,CAAC,EAAG,GAAI,MAahB0J,GAVW,IAAIC,UAAsB,CAChDC,OAAQ,+CACRC,IAAK,CACHC,GAAI,oCACJC,GAAI,mDAENC,QAAQ,EACRpI,QAAS0H,IAGiB,IAAIW,eAAa,CAAEjK,kBAAmB,CAAC,GAAI,OAG1DkK,EAAgB,IAAIC,IAAuB,CACtDP,OAAQ,+CACRI,QAAQ,EAAKH,IAAK,CAChBC,GAAI,oCACJC,GAAI,qDAaKK,GAPa,IAAIC,IAAoB,CAChDxI,IAAKwH,EACLiB,QAAS,UACTC,WACE,4KAGqEC,EAAA,GAAApJ,OAAAoI,EAAA,EAAApI,CAAAoJ,EACtEC,IAAeC,SAAWjB,GAD4CrI,OAAAoI,EAAA,EAAApI,CAAAoJ,EAEtEC,IAAeE,cAAgBT,GAFuC9I,OAAAoI,EAAA,EAAApI,CAAAoJ,EAGtEC,IAAeG,IAAMlB,GAHiDc,WC2ZzDK,EAldF,SAAC3K,GAAU,IAAA4K,EAEWC,IAAMC,cAASrK,GAF1BsK,EAAA7J,OAAA8J,EAAA,EAAA9J,CAAA0J,EAAA,GAELK,GAFKF,EAAA,GAAAA,EAAA,IAAAG,EAGaL,IAAMC,SAAS,MAACrK,IAH7B0K,EAAAjK,OAAA8J,EAAA,EAAA9J,CAAAgK,EAAA,GAGhBE,EAHgBD,EAAA,GAGJE,EAHIF,EAAA,GAAAG,EAI2BT,IAAMC,SAAS,IAJ1CS,EAAArK,OAAA8J,EAAA,EAAA9J,CAAAoK,EAAA,GAIGE,GAJHD,EAAA,GAAAA,EAAA,IAAAE,EAKDZ,IAAMC,cAASrK,GALdiL,EAAAxK,OAAA8J,EAAA,EAAA9J,CAAAuK,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAMab,IAAMC,SAAS,KAN5Bc,EAAA1K,OAAA8J,EAAA,EAAA9J,CAAAyK,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAO6Bf,IAAMC,SAAS,KAP5CgB,EAAA5K,OAAA8J,EAAA,EAAA9J,CAAA2K,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAQajB,IAAMC,SAAS,MAACrK,KAR7BuL,EAAA9K,OAAA8J,EAAA,EAAA9J,CAAA6K,EAAA,GAQhBE,EARgBD,EAAA,GAQJE,EARIF,EAAA,GAAAG,EAS2BtB,IAAMC,SAAS,IAT1CsB,EAAAlL,OAAA8J,EAAA,EAAA9J,CAAAiL,EAAA,GASGE,GATHD,EAAA,GAAAA,EAAA,IAAAE,EAU2BzB,IAAMC,SAAS,KAV1CyB,EAAArL,OAAA8J,EAAA,EAAA9J,CAAAoL,EAAA,GAUhBE,EAVgBD,EAAA,GAUGE,EAVHF,EAAA,GAAAG,EAWuB7B,IAAMC,SAAS,KAXtC6B,EAAAzL,OAAA8J,EAAA,EAAA9J,CAAAwL,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAYqB9B,IAAMC,SAAS,MAZpC+B,EAAA3L,OAAA8J,EAAA,EAAA9J,CAAA0L,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAaiBhC,IAAMC,SAAS,MAbhCiC,EAAA7L,OAAA8J,EAAA,EAAA9J,CAAA4L,EAAA,GAahBE,EAbgBD,EAAA,GAaFE,EAbEF,EAAA,GAAAG,EAciCrC,IAAMC,SAAS,KAdhDqC,EAAAjM,OAAA8J,EAAA,EAAA9J,CAAAgM,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAeiCtC,IAAMC,SAAS,MAfhDuC,EAAAnM,OAAA8J,EAAA,EAAA9J,CAAAkM,EAAA,GAehBE,EAfgBD,EAAA,GAeME,EAfNF,EAAA,GAAAG,EAgB6B3C,IAAMC,SAAS,KAhB5C2C,EAAAvM,OAAA8J,EAAA,EAAA9J,CAAAsM,EAAA,GAAAE,IAAAD,EAAA,GAAAA,EAAA,GAiBK5C,IAAMC,SAAS,MAACrK,KAjBrBkN,GAAAzM,OAAA8J,EAAA,EAAA9J,CAAAwM,GAAA,GAAAE,IAAAD,GAAA,GAAAA,GAAA,GAkBS7C,mBAAS,OAlBlB+C,GAAA3M,OAAA8J,EAAA,EAAA9J,CAAA0M,GAAA,GAAAE,IAAAD,GAAA,GAAAA,GAAA,GAmBehD,IAAMC,UAAS,IAnB9BiD,GAAA7M,OAAA8J,EAAA,EAAA9J,CAAA4M,GAAA,GAmBhBE,GAnBgBD,GAAA,GAmBHE,GAnBGF,GAAA,GAAAG,GAoBerD,IAAMC,UAAS,GApB9BqD,GAAAjN,OAAA8J,EAAA,EAAA9J,CAAAgN,GAAA,GAoBhBE,GApBgBD,GAAA,GAoBHE,GApBGF,GAAA,GAAAG,IAqBNC,mBAG2C1D,IAAMC,SAAS,MAxBpD0D,GAAAtN,OAAA8J,EAAA,EAAA9J,CAAAoN,GAAA,GAwBhBG,GAxBgBD,GAAA,GAwBQE,GAxBRF,GAAA,GAAAG,GAyBqC9D,IAAMC,SAAS,KAzBpD8D,GAAA1N,OAAA8J,EAAA,EAAA9J,CAAAyN,GAAA,GAyBhBE,GAzBgBD,GAAA,GAyBQE,GAzBRF,GAAA,GAAAG,GA0BalE,IAAMC,SAAS,GA1B5BkE,GAAA9N,OAAA8J,EAAA,EAAA9J,CAAA6N,GAAA,GA0BhBE,GA1BgBD,GAAA,GA0BJE,GA1BIF,GAAA,GA4BnBtO,GAAUV,EAAMU,QA5BG,SAsHRyO,KAtHQ,OAAAC,GAAAtI,MAAA1F,KAAA2F,WAAA,SAAAqI,KAAA,OAAAA,GAAAlO,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAsHvB,SAAAkG,IAAA,OAAAnG,EAAApC,EAAAiD,KAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,uBAAAmB,EAAAvD,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAEe,SAAA8F,IAAA,IAAAgH,EAAApD,EAAAb,EAAAoB,EAAAQ,EAAAM,EAAAmB,EAAAI,EAAA,OAAAvM,EAAApC,EAAAiD,KAAA,SAAAmF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,cAEL+L,EAAOC,OAAOD,KAIpBhD,EAD0B,8CAEpBJ,EAAa,IAAIoD,EAAKE,IAAIC,SAC9BC,EAHwB,8CAM1BvD,EAAcD,GACd1I,QAAQmM,IAAIzD,GAIZT,EAD0B,8CAEpBJ,EAAa,IAAIiE,EAAKE,IAAIC,SAC9BG,EAHwB,8CAM1BtE,EAAcD,GACd7H,QAAQmM,IAAItE,GAtBD9C,EAAAhF,KAAA,GAwBmB8H,EAAWwE,QAAQC,UAAUnP,IAASa,OAxBzD,eAwBPiL,EAxBOlE,EAAAnE,KAyBXsI,EAAqBD,EAAkBhG,YAzB5B8B,EAAAhF,KAAA,GA2Bc2I,EAAW2D,QAAQE,cAAcpP,IAASa,OA3BxD,eA2BPyL,EA3BO1E,EAAAnE,KA4BX8I,EAAgBD,EAAaxG,YA5BlB8B,EAAAhF,KAAA,GA8BsB2I,EAAW2D,QAAQG,iBAAiBxO,OA9B1D,eA8BP+L,EA9BOhF,EAAAnE,KA+BXoJ,EAAwBD,EAAqB9G,YA/BlC8B,EAAAhF,KAAA,GAiCwB2I,EAAW2D,QAAQI,WAAWtP,IAASa,OAjC/D,eAiCPkN,EAjCOnG,EAAAnE,KAkCXuK,GAA0BD,EAAuBjI,YAlCtC8B,EAAAhF,KAAA,GAoCwB2I,EAAW2D,QAAQK,WAAWvP,IAASa,OApC/D,QAoCPsN,EApCOvG,EAAAnE,KAqCX2K,GAA0BD,EAAuBrI,YArCtC,yBAAA8B,EAAAzC,SAAAwC,MAFf,yBAAA5D,EAAAqC,MAAA1F,KAAA2F,YAAA,EA0CEmJ,GA1CF,wBAAAxH,EAAA7C,SAAA4C,OAtHuB3B,MAAA1F,KAAA2F,WAgCvBoJ,oBAAU,gBACQ1P,IAAZC,IACF2N,IAAe,GACfiB,OAAOD,KAAO,IAAIe,IAAKd,OAAOD,KAAOC,OAAOD,KAAKgB,gBAAkBrG,EAAcsG,wBAE9EjC,IAAe,IACnB,CAAC3N,KAEJyP,oBAAU,YAEE,eAAAI,EAAArP,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAAG,SAAAC,IAAA,IAAA6M,EAAAmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzO,EAAApC,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEH+L,EAAOC,OAAOD,UAEJ5O,IAAZC,GAJK,CAAA0C,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKiB+L,EAAKE,IAAIyB,IAAIC,QAL9B,cAKDC,EALC9N,EAAAe,KAMP8G,EAAaiG,GAIb7E,EAD0B,8CAEpBJ,EAAa,IAAIoD,EAAKE,IAAIC,SAC9BC,EAHwB,8CAM1BvD,EAAcD,GACd1I,QAAQmM,IAAIzD,GAIZT,EAD0B,8CAEpBJ,EAAa,IAAIiE,EAAKE,IAAIC,SAC9BG,EAHwB,8CAM1BtE,EAAcD,GACd7H,QAAQmM,IAAItE,GA1BLhI,EAAAE,KAAA,GA8ByB8H,EAAWwE,QAAQC,UAAUnP,IAASa,OA9B/D,eA8BDiL,EA9BCpJ,EAAAe,KA+BLsI,EAAqBD,EAAkBhG,YA/BlCpD,EAAAE,KAAA,GAiCoB2I,EAAW2D,QAAQE,cAAcpP,IAASa,OAjC9D,eAiCDyL,EAjCC5J,EAAAe,KAkCL8I,EAAgBD,EAAaxG,YAlCxBpD,EAAAE,KAAA,GAoC4B2I,EAAW2D,QAAQG,iBAAiBxO,OApChE,eAoCD+L,EApCClK,EAAAe,KAqCLoJ,EAAwBD,EAAqB9G,YArCxCpD,EAAAE,KAAA,GAuC8B2I,EAAW2D,QAAQI,WAAWtP,IAASa,OAvCrE,eAuCDkN,EAvCCrL,EAAAe,KAwCLuK,GAA0BD,EAAuBjI,YAxC5CpD,EAAAE,KAAA,GA0C8B2I,EAAW2D,QAAQK,WAAWvP,IAASa,OA1CrE,QA0CDsN,EA1CCzL,EAAAe,KA2CL2K,GAA0BD,EAAuBrI,YAKnDyF,EAAWkF,OAAOC,OAAO,CAACC,UAAW,IAClCC,GAAG,OAAQ,SAAAC,GAAK,OAAIpC,OAGvBlD,EAAWkF,OAAOK,UAAU,CAACH,UAAW,IACrCC,GAAG,OAAQ,SAAAC,GAAK,OAAIpC,OAGvBlD,EAAWkF,OAAOM,eAAe,CAACJ,UAAW,IAC1CC,GAAG,OAAQ,SAAAC,GAAK,OAAIpC,OAGrBlD,EAAWkF,OAAOO,eAAe,CAACL,UAAW,IAC5CC,GAAG,OAAQ,SAAAC,GAAK,OAAIpC,OAGvBlD,EAAWkF,OAAOQ,gBAAgB,CAACN,UAAW,IAC3CC,GAAG,OAAQ,SAAAC,GAAK,OAAIpC,OAIvBlB,IADoB,GApEb,yBAAA7K,EAAAyC,SAAArD,MAAH,yBAAA+N,EAAAzJ,MAAA1F,KAAA2F,YAAA,EAyEVmJ,IACC,CAAC9B,GAAapB,EAAcC,EAAiBvM,KAwDlD,IAAMkR,GAAgB,eAAAtN,EAAApD,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAAG,SAAA8D,EAAOwL,GAAP,OAAAvP,EAAApC,EAAAiD,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACnB2K,IAAe,GACf4D,EAASvC,OAAOD,KAAKyC,MAAMC,MAAMF,EAAQ,SACzCzG,EAAWwE,QAAQoC,QAAQ/F,EAAWgG,SAAUJ,GAAQK,KAAK,CAACC,KAAMzR,KAAU0R,KAAK,UAAW,SAACC,GAC/FpG,EAAW2D,QAAQ0C,MAAMT,GAAQK,KAAK,CAACC,KAAMzR,OAJ1B,wBAAA6F,EAAAV,SAAAQ,MAAH,gBAAAO,GAAA,OAAAtC,EAAAwC,MAAA1F,KAAA2F,YAAA,GAQdwL,GAAqB,SAACV,GAC5B5D,IAAe,GACf4D,EAASvC,OAAOD,KAAKyC,MAAMC,MAAMF,EAAQ,SACzC5F,EAAW2D,QAAQ4C,SAASX,GAAQK,KAAK,CAACC,KAAMzR,KAAU4Q,GAAG,kBAAmB,SAACmB,OAU3EC,GAAe,WACrBzE,IAAe,GACfhC,EAAW2D,QAAQ+C,QAAQT,KAAK,CAACC,KAAMzR,KAAU4Q,GAAG,kBAAmB,SAACmB,OAI1E,OAAGG,YAED3S,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,mCACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,SACPH,EAAAC,EAAAC,cAAA,sBACYF,EAAAC,EAAAC,cAAA,SAAI6N,GAAc,UAAY,YACtC/N,EAAAC,EAAAC,cAAA,oDAIZF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,SACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,MAAX,gBAGIH,EAAAC,EAAAC,cAAA,aAAKiO,GAAcd,EAAqB,KAAO,EAA/C,WAERrN,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gCACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,WAAWyS,IAAI,2CAA2CC,IAAI,GAAGC,MAAM,MAAMC,OAAO,SAE/F/S,EAAAC,EAAAC,cAAA,OAAKC,MAAM,SACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,UAApC,gBAGIjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,UAAY9E,GAAcS,GAAuB,KAAO,EAA/E,WAGhB5O,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,SACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,MAAX,eAGIH,EAAAC,EAAAC,cAAA,aAAKiO,GAAcpB,EAAa,KAAO,EAAvC,WAER/M,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gCACPH,EAAAC,EAAAC,cAAA,QAAMC,MAAM,iBAAiB+S,kBAAgB,KAErClT,EAAAC,EAAAC,cAAA,SAAIiO,GAAc5B,EAAkB,KAAO,EAA3C,UAEJvM,EAAAC,EAAAC,cAAA,SAAOiT,KAAK,SAAS5N,MAAOyJ,GAAYoE,SAAU,SAAA1N,GAAC,OAAIuJ,GAAcvJ,EAAE2N,OAAO9N,QAAQ+N,UAAU,iBAE5FtT,EAAAC,EAAAC,cAAA,UACEC,MAAM,OACNI,QAAS,SAAC+Q,GAEV,IAAIM,EADJN,EAAMiC,kBAEN3B,EAASrF,EAAkBhG,YACf,IACZqL,EAASvC,OAAOD,KAAKyC,MAAM2B,QAAQ5B,EAAQ,SAC3C3C,GAAc2C,MARhB,OAaA5R,EAAAC,EAAAC,cAAA,UACIiT,KAAK,SACL5S,QAAS,SAAC+Q,GACVA,EAAMiC,iBAIN5B,GAFS3C,KAITsE,UAAU,oCATd,WAYAtT,EAAAC,EAAAC,cAAA,UACIiT,KAAK,SACL5S,QAAS,SAAC+Q,GACVA,EAAMiC,iBAGNjB,GADStD,KAGTsE,UAAU,oCARd,YAWAtT,EAAAC,EAAAC,cAAA,UACIiT,KAAK,SACL5S,QAAS,SAAC+Q,GACVA,EAAMiC,iBACNd,MAEAa,UAAU,oCANd,WAWRtT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,SACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,UAApC,gBAGIjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,UAAvB,IAAoC9E,GAAcK,GAAuB,KAAO,EAAhF,YAgCVxO,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,mBACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qBAO3BH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iCAETH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,kBAKFjT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,SAAI6N,GAAc,UAAY,cAG3C/N,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,WAAWyS,IAAI,2CAA2CC,IAAI,GAAGC,MAAM,MAAMC,OAAO,SAGjG/S,EAAAC,EAAAC,cAAA,OAAKC,MAAM,sCAIXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,yCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,iBAIFjT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wCAAwC6S,MAAO,CAAEC,UAAW,WACrEjT,EAAAC,EAAAC,cAAA,aAAKiO,GAAcd,EAAqB,KAAO,EAA/C,WAGFrN,EAAAC,EAAAC,cAAA,OAAKC,MAAM,sCAIXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,yCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,gBAIFjT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wCAAwC6S,MAAO,CAAEC,UAAW,WACrEjT,EAAAC,EAAAC,cAAA,aAAKiO,GAAcpB,EAAa,KAAO,EAAvC,WAGF/M,EAAAC,EAAAC,cAAA,OAAKC,MAAM,sCAIXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,yCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,iBAIFjT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wCAAwC6S,MAAO,CAAEC,UAAW,WACrEjT,EAAAC,EAAAC,cAAA,SAAIiO,GAAcS,GAAuB,KAAO,EAAhD,UAGF5O,EAAAC,EAAAC,cAAA,OAAKC,MAAM,sCAIXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,yCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,iBAIFjT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wCAAwC6S,MAAO,CAAEC,UAAW,WACrEjT,EAAAC,EAAAC,cAAA,aAAKiO,GAAcK,GAAuB,KAAO,EAAjD,WAGFxO,EAAAC,EAAAC,cAAA,OAAKC,MAAM,sCAIXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,yCACTH,EAAAC,EAAAC,cAAA,QAAMC,MAAM,iBAAiB+S,kBAAgB,KAC3ClT,EAAAC,EAAAC,cAAA,SAAIiO,GAAc5B,EAAkB,KAAO,EAA3C,UACEvM,EAAAC,EAAAC,cAAA,SAAOiT,KAAK,SAAS5N,MAAOyJ,GAAYoE,SAAU,SAAA1N,GAAC,OAAIuJ,GAAcvJ,EAAE2N,OAAO9N,QAAQ+N,UAAU,iBAE9FtT,EAAAC,EAAAC,cAAA,UACEC,MAAM,OACNI,QAAS,SAAC+Q,GAEV,IAAIM,EADJN,EAAMiC,kBAEN3B,EAASrF,EAAkBhG,YACf,IACZqL,EAASvC,OAAOD,KAAKyC,MAAM2B,QAAQ5B,EAAQ,SAC3C3C,GAAc2C,MARhB,OAaA5R,EAAAC,EAAAC,cAAA,UACEiT,KAAK,SACL5S,QAAS,SAAC+Q,GACVA,EAAMiC,iBAGN5B,GADS3C,KAGTsE,UAAU,oCARZ,WAWAtT,EAAAC,EAAAC,cAAA,UACEiT,KAAK,SACL5S,QAAS,SAAC+Q,GACVA,EAAMiC,iBAGNjB,GADStD,KAGTsE,UAAU,oCARZ,YAWAtT,EAAAC,EAAAC,cAAA,UACEiT,KAAK,SACL5S,QAAS,SAAC+Q,GACVA,EAAMiC,iBACNd,MAEAa,UAAU,oCANZ,yCCzchB,sBCwegBG,EA3dA,SAAC1T,GAAU,IAAA4K,EAESC,IAAMC,cAASrK,GAFxBsK,EAAA7J,OAAA8J,EAAA,EAAA9J,CAAA0J,EAAA,GAEPK,GAFOF,EAAA,GAAAA,EAAA,IAAAG,EAGyBL,IAAMC,SAAS,IAHxCK,EAAAjK,OAAA8J,EAAA,EAAA9J,CAAAgK,EAAA,GAAAI,GAAAH,EAAA,GAAAA,EAAA,GAIHN,IAAMC,cAASrK,IAJZ8K,EAAArK,OAAA8J,EAAA,EAAA9J,CAAAoK,EAAA,GAAAG,GAAAF,EAAA,GAAAA,EAAA,GAKWV,IAAMC,SAAS,KAL1BY,EAAAxK,OAAA8J,EAAA,EAAA9J,CAAAuK,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAM2Bb,IAAMC,SAAS,KAN1Cc,EAAA1K,OAAA8J,EAAA,EAAA9J,CAAAyK,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAOef,IAAMC,SAAS,MAACrK,KAP/BqL,EAAA5K,OAAA8J,EAAA,EAAA9J,CAAA2K,EAAA,GAOlB8H,EAPkB7H,EAAA,GAOJ8H,EAPI9H,EAAA,GAAAC,EAQ6BlB,IAAMC,SAAS,IAR5CkB,EAAA9K,OAAA8J,EAAA,EAAA9J,CAAA6K,EAAA,GAQlB8H,EARkB7H,EAAA,GAQG8H,EARH9H,EAAA,GAAAG,EASyBtB,IAAMC,SAAS,KATxCsB,EAAAlL,OAAA8J,EAAA,EAAA9J,CAAAiL,EAAA,GASlBK,EATkBJ,EAAA,GASCK,EATDL,EAAA,GAAAE,EAUWzB,IAAMC,SAAS,KAV1ByB,EAAArL,OAAA8J,EAAA,EAAA9J,CAAAoL,EAAA,GAUlByH,EAVkBxH,EAAA,GAUNyH,EAVMzH,EAAA,GAAAG,EAYa7B,IAAMC,UAAS,GAZ5B6B,EAAAzL,OAAA8J,EAAA,EAAA9J,CAAAwL,EAAA,GAYlBsB,EAZkBrB,EAAA,GAYLsB,EAZKtB,EAAA,GAAAC,EAaa/B,IAAMC,UAAS,GAb5B+B,EAAA3L,OAAA8J,EAAA,EAAA9J,CAAA0L,EAAA,GAalBwB,EAbkBvB,EAAA,GAaLwB,EAbKxB,EAAA,GAAAC,GAcRyB,mBACCA,mBACkC1D,IAAMC,SAAS,IAhB1CiC,EAAA7L,OAAA8J,EAAA,EAAA9J,CAAA4L,EAAA,GAAAI,GAAAH,EAAA,GAAAA,EAAA,GAiBiBlC,IAAMC,SAAS,IAjBhCqC,EAAAjM,OAAA8J,EAAA,EAAA9J,CAAAgM,EAAA,GAiBlB+G,EAjBkB9G,EAAA,GAiBH+G,EAjBG/G,EAAA,GAAAC,EAkBmBvC,IAAMC,SAAS,GAlBlCuC,GAAAnM,OAAA8J,EAAA,EAAA9J,CAAAkM,EAAA,GAkBlB+G,GAlBkB9G,GAAA,GAkBF+G,GAlBE/G,GAAA,GAAAG,GAoBD3C,IAAMC,SAAS,IApBd2C,GAAAvM,OAAA8J,EAAA,EAAA9J,CAAAsM,GAAA,GAoBZ6G,IApBY5G,GAAA,GAAAA,GAAA,IAAAC,GAqBC7C,IAAMC,SAAS,IArBhB6C,GAAAzM,OAAA8J,EAAA,EAAA9J,CAAAwM,GAAA,GAqBlB4G,GArBkB3G,GAAA,GAqBX4G,GArBW5G,GAAA,GAwBnB6G,GAAS,uDAEX9T,GAAUV,EAAMU,QAChB0K,GAAapL,EAAMoL,WA3BE,SA0FVqJ,GA1FU7N,GAAA,OAAA8N,GAAA5N,MAAA1F,KAAA2F,WAAA,SAAA2N,KAAA,OAAAA,GAAAxT,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KA0FzB,SAAA8D,EAA+BsO,GAA/B,IAAAhE,EAAA,OAAArO,EAAApC,EAAAiD,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAAlD,KAAA,EAAAkD,EAAAjD,KAAA,EAEoCqR,EAAS/E,QAAQC,UAAUnP,IAASa,OAFxE,OAEUiL,EAFVjG,EAAApC,KAGIsI,EAAqBD,EAAkBhG,YAH3CD,EAAAjD,KAAA,gBAAAiD,EAAAlD,KAAA,EAAAkD,EAAAnC,GAAAmC,EAAA,SAKIhD,QAAQmM,IAAI,QAAZnJ,EAAAnC,IALJ,yBAAAmC,EAAAV,SAAAQ,EAAA,kBA1FyBS,MAAA1F,KAAA2F,WAAA,SAmGVoI,KAnGU,OAAAC,GAAAtI,MAAA1F,KAAA2F,WAAA,SAAAqI,KAAA,OAAAA,GAAAlO,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAmGzB,SAAAkG,IAAA,OAAAnG,EAAApC,EAAAiD,KAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,uBAAAgB,EAAApD,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAEe,SAAA8F,IAAA,IAAAgH,EAAA7C,EAAAuH,EAAA,OAAAzR,EAAApC,EAAAiD,KAAA,SAAAmF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,cAEL+L,EAAOC,OAAOD,KAFT/G,EAAAhF,KAAA,EAGmB8H,GAAWwE,QAAQC,UAAUnP,IAASa,OAHzD,cAGPiL,EAHOlE,EAAAnE,KAIPsI,EAAqBD,EAAkBhG,YAJhC8B,EAAAhF,KAAA,EAMY+L,EAAKE,IAAIqF,WAAWlU,IANhC,OAMPqT,EANOzL,EAAAnE,KAOP6P,EAAcD,GAPP,wBAAAzL,EAAAzC,SAAAwC,MAFf,yBAAA/D,EAAAwC,MAAA1F,KAAA2F,YAAA,EAYEmJ,GAZF,wBAAAxH,EAAA7C,SAAA4C,OAnGyB3B,MAAA1F,KAAA2F,WA8BzBoJ,oBAAU,gBACQ1P,IAAZC,IACF2N,GAAe,GACfiB,OAAOD,KAAO,IAAIe,IAAKd,OAAOD,KAAOC,OAAOD,KAAKgB,gBAAkBrG,EAAcsG,wBAE9EjC,GAAe,IACnB,CAAC3N,KAEJyP,oBAAU,YAEE,eAAAI,EAAArP,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAAG,SAAAC,IAAA,IAAA6M,EAAAmB,EAAAqE,EAAA,OAAAvS,EAAApC,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEH+L,EAAOC,OAAOD,MAChBjB,EAHK,CAAAhL,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAIiB+L,EAAKE,IAAIyB,IAAIC,QAJ9B,cAIDC,EAJC9N,EAAAe,KAKP8G,EAAaiG,GAIb4C,EAD4B,8CAEtBH,EAAe,IAAItE,EAAKE,IAAIC,SAChCsF,EAH0B,8CAM5BlB,EAAgBD,GAChBpQ,QAAQmM,IAAIiE,GAGZoB,IAAM9L,IAAI,kHACThD,KAAK,SAAA+O,GACNX,GAAQW,EAAIhU,MACZuC,QAAQmM,IAAIsF,EAAIhU,MAChBuT,GAASS,EAAIhU,KAAKiU,YAAYC,cAAcC,OAtBrC/R,EAAAE,KAAA,GA2BDmR,GAAgBrJ,IA3Bf,eAAAhI,EAAAE,KAAA,GA6BDgM,OAAOD,KAAKE,IAAIqF,WAAWlU,IAASuF,KAAK,SAAC8N,GAC9CC,EAAcD,KA9BT,QAkCPJ,EAAaxC,OAAOiE,cAAc,CAAC/D,UAAW,IAC3CC,GAAG,OAAQ,SAAAC,GAAK,OAAIpC,OAGvBwE,EAAaxC,OAAOkE,SAAS,CAAChE,UAAW,IACtCC,GAAG,OAAQ,SAAAC,GAAK,OAAIpC,OAIvBlB,GADoB,GA1Cb,yBAAA7K,EAAAyC,SAAArD,MAAH,yBAAA+N,EAAAzJ,MAAA1F,KAAA2F,YAAA,EA+CVmJ,IACC,CAAC9B,EAAa5B,EAAmBuH,IA0BpC,IAAMuB,GAAU,SAACzD,GACFvC,OAAOD,KACfE,IAAIgG,gBAAgB,CACvBpD,KAAMzR,GACN8U,GAAI3B,EACJrO,MAAOqM,KAIL4D,GAAW,SAAC5D,GAChB5D,GAAe,GACf4D,EAASvC,OAAOD,KAAKyC,MAAMC,MAAMF,EAAQ,SACzCzG,GAAWwE,QAAQoC,QAAQ2B,EAAa1B,SAAUJ,GAAQK,KAAK,CAACC,KAAMzR,KAAU4Q,GAAG,kBAAmB,SAACmB,GACvGkB,EAAa/D,QAAQ6F,SAAS5D,GAAQK,KAAK,CAACwD,SAAU,IAAUvD,KAAMzR,QAWlE,OAAGkS,YAGC3S,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,mCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,SACPH,EAAAC,EAAAC,cAAA,sBACUF,EAAAC,EAAAC,cAAA,SAAI6N,EAAc,UAAY,cAG5C/N,EAAAC,EAAAC,cAAA,OAAKC,MAAM,UAGXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,UAGXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,SACTH,EAAAC,EAAAC,cAAA,UAAQC,MAAM,mCAAmCuV,qBAAmB,6BAApE,gBAGF1V,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,oBAKFjT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iCAGXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gCACPH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,WAAWyS,IAAI,2CAA2CC,IAAI,GAAGC,MAAM,MAAMC,OAAO,SAEjG/S,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,WACAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAa9E,EAAcwH,WAAWtG,OAAOD,KAAKyC,MAAM2B,QAAQjH,EAAmB,UAAUqJ,QAAQ,GAAK,EAAjI,SACA5V,EAAAC,EAAAC,cAAA,iBAGNF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gCACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,UAIFjT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,IAAqCoB,GAArC,UAGJrU,EAAAC,EAAAC,cAAA,OAAKC,MAAM,sCAGXH,EAAAC,EAAAC,cAAA,OAAK2V,KAAG,EAAC1V,MAAM,uCAInBH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gCACPH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,WAAYyS,IAAI,qCAAqCC,IAAI,GAAGC,MAAM,MAAMC,OAAO,SAE5F/S,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,WACAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAa9E,EAAcwH,WAAWtG,OAAOD,KAAKyC,MAAM2B,QAAQM,EAAY,UAAU8B,QAAQ,GAAK,EAA1H,UAGN5V,EAAAC,EAAAC,cAAA,OAAKC,MAAM,kCAIfH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,UACXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,MAAM,iBAAiB+S,kBAAgB,KACrClT,EAAAC,EAAAC,cAAA,SAAOiT,KAAK,SAAS5N,MAAOyO,EAAeZ,SAAU,SAAA1N,GAAC,OAAIuO,EAAiBvO,EAAE2N,OAAO9N,QAAQ+N,UAAU,iBAChGtT,EAAAC,EAAAC,cAAA,UACEC,MAAM,OACNI,QAAS,SAAC+Q,GAEV,IAAIM,EADJN,EAAMiC,kBAEN3B,EAASkC,EAAWvN,YACR,IACZqL,EAASvC,OAAOD,KAAKyC,MAAM2B,QAAQ5B,EAAQ,SAC3CqC,EAAiBrC,MARnB,OAYE5R,EAAAC,EAAAC,cAAA,UACIiT,KAAK,SACL5S,QAAS,SAAC+Q,GAEV,IAAIM,EADJN,EAAMiC,iBAEN3B,EAASoC,EACTpC,EAASvC,OAAOD,KAAKyC,MAAMC,MAAMF,EAAQ,SACzCyD,GAAQzD,IAER0B,UAAU,oCATd,cAaVtT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,UACXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,MAAM,iBAAiB+S,kBAAgB,KACzClT,EAAAC,EAAAC,cAAA,SAAOiT,KAAK,SAAS5N,MAAO2O,GAAgBd,SAAU,SAAA1N,GAAC,OAAIyO,GAAkBzO,EAAE2N,OAAO9N,QAAQ+N,UAAU,iBACpGtT,EAAAC,EAAAC,cAAA,UACEC,MAAM,OACNI,QAAS,SAAC+Q,GAEV,IAAIM,EADJN,EAAMiC,kBAEN3B,EAASrF,EAAkBhG,YACf,IACZqL,EAASvC,OAAOD,KAAKyC,MAAM2B,QAAQ5B,EAAQ,SAC3CuC,GAAkBvC,MARpB,OAYJ5R,EAAAC,EAAAC,cAAA,UACQiT,KAAK,SACL5S,QAAS,SAAC+Q,GACVA,EAAMiC,iBAINiC,GAFStB,KAITZ,UAAU,oCATlB,eAaRtT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iCAGXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iCAEXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iCAEXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,kCAIfH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCAELH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aAAa8E,GAAG,cAAc6Q,SAAS,KAAKC,KAAK,UACxD/V,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eAAe4V,KAAK,YAC3B/V,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iBAETH,EAAAC,EAAAC,cAAA,OACE8S,MAAO,CACLF,MAAO,QACPC,OAAQ,QACRiD,UAAW,kCACXC,aAAc,OACdC,OAAQ,OACRC,MAAO,YAGTnW,EAAAC,EAAAC,cAACkW,EAAAnW,EAAD,CACEkW,MAAO,UACPE,cAAe,IAEfC,QAAS/B,GACTgC,QAAS,CACPC,YAAa,CAAC,iBAKtBxW,EAAAC,EAAAC,cAAA,UAAQC,MAAM,QAAQgT,KAAK,SAASsD,eAAa,QAAQC,aAAW,SAAQ1W,EAAAC,EAAAC,cAAA,QAAMyW,cAAY,QAAlB,aAMpF3W,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,mBACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qBAM3BH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iCAETH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,oBAKFjT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,sBACUF,EAAAC,EAAAC,cAAA,SAAI6N,EAAc,UAAY,cAI1C/N,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,UAKFjT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,IAAqCoB,GAArC,SAGFrU,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gCACTH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,WAAWyS,IAAI,2CAA2CC,IAAI,GAAGC,MAAM,MAAMC,OAAO,QAC/F/S,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,WACAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAa9E,EAAcwH,WAAWtG,OAAOD,KAAKyC,MAAM2B,QAAQjH,EAAmB,UAAUqJ,QAAQ,GAAK,EAAjI,WAGJ5V,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gCACTH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,WAAYyS,IAAI,qCAAqCC,IAAI,GAAGC,MAAM,MAAMC,OAAO,QAC1F/S,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,WACAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAa9E,EAAcwH,WAAWtG,OAAOD,KAAKyC,MAAM2B,QAAQM,EAAY,UAAU8B,QAAQ,GAAK,EAA1H,WAKN5V,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,MAAM,iBAAiB+S,kBAAgB,KAC3ClT,EAAAC,EAAAC,cAAA,SAAOiT,KAAK,SAAS5N,MAAOyO,EAAeZ,SAAU,SAAA1N,GAAC,OAAIuO,EAAiBvO,EAAE2N,OAAO9N,QAAQ+N,UAAU,iBACpGtT,EAAAC,EAAAC,cAAA,UACEC,MAAM,OACNI,QAAS,SAAC+Q,GAEV,IAAIM,EADJN,EAAMiC,kBAEN3B,EAASkC,EAAWvN,YACR,IACZqL,EAASvC,OAAOD,KAAKyC,MAAM2B,QAAQ5B,EAAQ,SAC3CqC,EAAiBrC,MARnB,OAYA5R,EAAAC,EAAAC,cAAA,UACEiT,KAAK,SACL5S,QAAS,SAAC+Q,GAEV,IAAIM,EADJN,EAAMiC,iBAEN3B,EAASoC,EACTpC,EAASvC,OAAOD,KAAKyC,MAAMC,MAAMF,EAAQ,SACzCyD,GAAQzD,IAER0B,UAAU,oCATZ,eAeRtT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,MAAM,iBAAiB+S,kBAAgB,KAC3ClT,EAAAC,EAAAC,cAAA,SAAOiT,KAAK,SAAS5N,MAAO2O,GAAgBd,SAAU,SAAA1N,GAAC,OAAIyO,GAAkBzO,EAAE2N,OAAO9N,QAAQ+N,UAAU,iBACtGtT,EAAAC,EAAAC,cAAA,UACAC,MAAM,OACNI,QAAS,SAAC+Q,GAEV,IAAIM,EADJN,EAAMiC,kBAEN3B,EAASrF,EAAkBhG,YACf,IACZqL,EAASvC,OAAOD,KAAKyC,MAAM2B,QAAQ5B,EAAQ,SAC3CuC,GAAkBvC,MARlB,OAYA5R,EAAAC,EAAAC,cAAA,UACEiT,KAAK,SACL5S,QAAS,SAAC+Q,GACVA,EAAMiC,iBAINiC,GAFStB,KAITZ,UAAU,oCATZ,gBAeRtT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,MAAM,mCAAmCuV,qBAAmB,6BAApE,gBAIJ1V,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aAAa8E,GAAG,cAAc6Q,SAAS,KAAKC,KAAK,UACpD/V,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eAAe4V,KAAK,YAC3B/V,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iBAETH,EAAAC,EAAAC,cAAA,OACE8S,MAAO,CACLF,MAAO,QACPC,OAAQ,QACRiD,UAAW,kCACXC,aAAc,OACdC,OAAQ,OACRC,MAAO,YAGTnW,EAAAC,EAAAC,cAACkW,EAAAnW,EAAD,CACEkW,MAAO,UACPE,cAAe,IAEfC,QAAS/B,GACTgC,QAAS,CACPC,YAAa,CAAC,iBAKtBxW,EAAAC,EAAAC,cAAA,UAAQC,MAAM,QAAQgT,KAAK,SAASsD,eAAa,QAAQC,aAAW,SAAQ1W,EAAAC,EAAAC,cAAA,QAAMyW,cAAY,QAAlB,eCzZ3FC,EA/CC,WAAM,IAAAC,EACaC,cAAzBC,EADYF,EACZE,SAAUC,EADEH,EACFG,WAGZC,EAAa,SAACxR,GAAD,QAAAyR,EAAApQ,UAAAY,OAASyP,EAAT,IAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAASF,EAATE,EAAA,GAAAvQ,UAAAuQ,GAAA,OAAkBC,MAAM7R,EAAM,KAAO0R,EAAKI,KAAK,SAwClE,MAAO,CAAEC,MAtCKC,sBAAY,SAACC,GACzB,IAAMC,EAAY1N,EAAiByN,GAC/BC,GACFrU,QAAQmM,IAAIkI,GACZZ,EAASY,EAAD,eAAArH,EAAArP,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAAY,SAAAC,EAAOiD,GAAP,OAAAnD,EAAApC,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClBgM,OAAOuI,aAAaC,WAAWC,KAC3BtS,aAAiBuS,IACnBd,EACE,uBACA,oDAGFzR,aAAiBwS,KACjBxS,aAAiByS,qBAEjBhB,EAAW,iBAAkB,yBAE7BzR,aAAiB0S,KACjB1S,aAAiB2S,KAEbR,aAAqB3N,MACC2N,EACRtH,sBAAwB,MAE1C4G,EACE,sBACA,4CAGFA,EAAWzR,EAAM4S,KAAM5S,EAAM3E,SAzBb,wBAAAsC,EAAAyC,SAAArD,MAAZ,gBAAAoE,GAAA,OAAA2J,EAAAzJ,MAAA1F,KAAA2F,YAAA,KA6BRmQ,EAAW,uBAAwB,kCAGpC,IAEaoB,OAAQrB,WC/C1B,SAASsB,KAAM,IAAAC,EAEa3B,IAAlBY,EAFKe,EAELf,MAAOa,EAFFE,EAEEF,OAFFxB,EAGaC,cAAlBrW,EAHKoW,EAGLpW,QAAS2O,EAHJyH,EAGIzH,KAHJoJ,EAI4CC,YACvDjB,EACAa,EACA5X,QAAWD,GAHLE,EAJK8X,EAIL9X,sBAAuBC,EAJlB6X,EAIkB7X,sBAK/B2C,QAAQmM,IAAIhP,GATC,IAAAkK,EAYyBC,IAAMC,UAAS,GAZxCC,EAAA7J,OAAA8J,EAAA,EAAA9J,CAAA0J,EAAA,GAYNwD,EAZMrD,EAAA,GAYOsD,EAZPtD,EAAA,GAAAG,EAaqBL,IAAMC,cAASrK,GAbpC0K,EAAAjK,OAAA8J,EAAA,EAAA9J,CAAAgK,EAAA,GAaKD,GAbLE,EAAA,GAAAA,EAAA,IAAAG,EAcuBT,IAAMC,SAAS,MAACrK,IAdvC8K,EAAArK,OAAA8J,EAAA,EAAA9J,CAAAoK,EAAA,GAcNF,EAdMG,EAAA,GAcMF,EAdNE,EAAA,GAAAE,EAeqCZ,IAAMC,SAAS,IAfpDY,EAAAxK,OAAA8J,EAAA,EAAA9J,CAAAuK,EAAA,GAeaD,GAfbE,EAAA,GAAAA,EAAA,IAAAC,EAgBqCd,IAAMC,SAAS,KAhBpDc,EAAA1K,OAAA8J,EAAA,EAAA9J,CAAAyK,EAAA,GAgBNa,EAhBMZ,EAAA,GAgBaa,EAhBbb,EAAA,GAAAC,EAiBShB,IAAMC,cAASrK,GAjBxBqL,EAAA5K,OAAA8J,EAAA,EAAA9J,CAAA2K,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAkBuBjB,IAAMC,SAAS,KAlBtCkB,EAAA9K,OAAA8J,EAAA,EAAA9J,CAAA6K,EAAA,GAAAI,GAAAH,EAAA,GAAAA,EAAA,GAmBuCnB,IAAMC,SAAS,KAnBtDsB,EAAAlL,OAAA8J,EAAA,EAAA9J,CAAAiL,EAAA,GAAAG,GAAAF,EAAA,GAAAA,EAAA,GAoBiCvB,IAAMC,SAAS,MApBhDyB,EAAArL,OAAA8J,EAAA,EAAA9J,CAAAoL,EAAA,GAAAI,GAAAH,EAAA,GAAAA,EAAA,GAqBuB1B,IAAMC,SAAS,MArBtC6B,EAAAzL,OAAA8J,EAAA,EAAA9J,CAAAwL,EAAA,GAqBNqH,EArBMpH,EAAA,GAAAC,GAAAD,EAAA,GAsByB9B,IAAMC,UAAS,IAtBxC+B,GAAA3L,OAAA8J,EAAA,EAAA9J,CAAA0L,EAAA,GAAAE,IAAAD,GAAA,GAAAA,GAAA,GAyB2BhC,IAAMC,SAAS,MAACrK,KAzB3CsM,GAAA7L,OAAA8J,EAAA,EAAA9J,CAAA4L,GAAA,GAyBN6G,GAzBM5G,GAAA,GAAAA,GAAA,YAgEI0H,GAhEJ7N,GAAA,OAAA8N,GAAA5N,MAAA1F,KAAA2F,WAAA,SAAA2N,KAAA,OAAAA,GAAAxT,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAgEX,SAAA8D,EAA+BsO,GAA/B,IAAAhE,EAAA,OAAArO,EAAApC,EAAAiD,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAAlD,KAAA,EAAAkD,EAAAjD,KAAA,EAEoCqR,EAAS/E,QAAQC,UAAUnP,GAASa,OAFxE,OAEUiL,EAFVjG,EAAApC,KAGIsI,EAAqBD,EAAkBhG,YAH3CD,EAAAjD,KAAA,gBAAAiD,EAAAlD,KAAA,EAAAkD,EAAAnC,GAAAmC,EAAA,SAKIhD,QAAQmM,IAAI,QAAZnJ,EAAAnC,IALJ,yBAAAmC,EAAAV,SAAAQ,EAAA,kBAhEWS,MAAA1F,KAAA2F,WAyEb,OA5CAoJ,oBAAU,gBACQ1P,IAAZC,GACF2N,GAAe,GACfiB,OAAOD,KAAO,IAAIe,IAAKd,OAAOD,KAAOC,OAAOD,KAAKgB,gBAAkBrG,EAAcsG,wBAE9EjC,GAAe,IACnB,CAAC3N,IAEJyP,oBAAU,YAEE,eAAAI,EAAArP,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAApC,EAAAqC,KAAG,SAAAC,IAAA,IAAA6M,EAAAmB,EAAAE,EAAA,OAAApO,EAAApC,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEH+L,EAAOC,OAAOD,MAChBjB,EAHK,CAAAhL,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAIiB+L,EAAKE,IAAIyB,IAAIC,QAJ9B,cAIDC,EAJC9N,EAAAe,KAKP8G,EAAaiG,GAGa,6CAC1B1F,EAD0B,8CAEpBJ,EAAa,IAAIiE,EAAKE,IAAIC,SAC9BG,EAHwB,8CAM1BtE,EAAcD,GACd7H,QAAQmM,IAAItE,GAfLhI,EAAAE,KAAA,GAkBDmR,GAAgBrJ,GAlBf,yBAAAhI,EAAAyC,SAAArD,MAAH,yBAAA+N,EAAAzJ,MAAA1F,KAAA2F,aAAA,EAsBVmJ,IACG,CAAC9B,EAAa5B,EAAmBuH,IAWnCnB,YAED3S,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyY,SAAA,KACE1Y,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyY,EAAD,CACElY,QAASA,EACTC,sBAAuBA,EACvBC,sBAAuBA,IAEzBX,EAAAC,EAAAC,cAAA,QAAM6V,KAAK,OAAOzC,UAAU,iCAC1BtT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,QACTH,EAAAC,EAAAC,cAAA,WAASC,MAAM,iCACbH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBACTH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,wBACRH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,WAAW4V,KAAK,gBACxB/V,EAAAC,EAAAC,cAAA,KAAGC,MAAM,uBAAuBG,KAAK,YAAYsY,cAAY,OAA7D,YAIF5Y,EAAAC,EAAAC,cAAA,MAAIC,MAAM,WAAW4V,KAAK,gBACxB/V,EAAAC,EAAAC,cAAA,KAAGC,MAAM,WAAWG,KAAK,YAAYsY,cAAY,OAAjD,UAIF5Y,EAAAC,EAAAC,cAAA,MAAIC,MAAM,WAAW4V,KAAK,gBACxB/V,EAAAC,EAAAC,cAAA,KAAGC,MAAM,WAAWG,KAAK,YAAYsY,cAAY,OAAjD,SAIF5Y,EAAAC,EAAAC,cAAA,MAAIC,MAAM,WAAW4V,KAAK,gBACxB/V,EAAAC,EAAAC,cAAA,KAAGC,MAAM,WAAWG,KAAK,YAAYsY,cAAY,OAAjD,kBAMN5Y,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,4BAA4B8E,GAAG,YACxCjF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gCACTH,EAAAC,EAAAC,cAAA,OAAKoT,UAAU,WACftT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCAETH,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC2Y,EAAD,CACEpY,QAASA,EACT2O,KAAMA,EACNsE,aAAeA,GACfvI,WAAcA,OAUtBnL,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBAAgB8E,GAAG,YAC5BjF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wBACXH,EAAAC,EAAAC,cAAA,OAAKoT,UAAU,WACbtT,EAAAC,EAAAC,cAAC4Y,EAAD,CACIrY,QAASA,EACT2O,KAAMA,EACNjE,WAAcA,OAKtBnL,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBAAgB8E,GAAG,YAC5BjF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wBACXH,EAAAC,EAAAC,cAAA,OAAKoT,UAAU,cAQjBtT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBAAgB8E,GAAG,YAC5BjF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wBACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,iBAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WACpBjT,EAAAC,EAAAC,cAAA,uBAEHF,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,oFAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,uHAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,gGAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,iEAKJjT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,cAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WACpBjT,EAAAC,EAAAC,cAAA,uBAEHF,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,mHAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,8KAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,qIAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,oDAKJjT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,iBAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WACpBjT,EAAAC,EAAAC,cAAA,uBAEHF,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,0DAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,6DAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,2DAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,qFAkBpBjT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyY,EAAD,CACElY,QAASA,EACTC,sBAAuBA,EACvBC,sBAAuBA,IAGzBX,EAAAC,EAAAC,cAAA,QAAM6V,KAAK,OAAOzC,UAAU,6BAC1BtT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eACTH,EAAAC,EAAAC,cAAA,WAASC,MAAM,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBACTH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,wBACRH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,WAAW4V,KAAK,gBACxB/V,EAAAC,EAAAC,cAAA,KAAGC,MAAM,uBAAuBG,KAAK,YAAYsY,cAAY,OAA7D,YAIF5Y,EAAAC,EAAAC,cAAA,MAAIC,MAAM,WAAW4V,KAAK,gBACxB/V,EAAAC,EAAAC,cAAA,KAAGC,MAAM,WAAWG,KAAK,YAAYsY,cAAY,OAAjD,UAIF5Y,EAAAC,EAAAC,cAAA,MAAIC,MAAM,WAAW4V,KAAK,gBACxB/V,EAAAC,EAAAC,cAAA,KAAGC,MAAM,WAAWG,KAAK,YAAYsY,cAAY,OAAjD,SAIF5Y,EAAAC,EAAAC,cAAA,MAAIC,MAAM,WAAW4V,KAAK,gBACxB/V,EAAAC,EAAAC,cAAA,KAAGC,MAAM,WAAWG,KAAK,YAAYsY,cAAY,OAAjD,kBAON5Y,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,4BAA4B8E,GAAG,YACxCjF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,cACTH,EAAAC,EAAAC,cAAA,OAAKoT,UAAU,WACftT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCAETH,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC2Y,EAAD,CACEpY,QAASA,EACT2O,KAAMA,EACNsE,aAAeA,GACfvI,WAAcA,OAMtBnL,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBAAgB8E,GAAG,YAC5BjF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wBACXH,EAAAC,EAAAC,cAAA,OAAKoT,UAAU,WACbtT,EAAAC,EAAAC,cAAC4Y,EAAD,CACIrY,QAASA,EACT2O,KAAMA,EACNjE,WAAcA,OAKtBnL,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBAAgB8E,GAAG,YAC5BjF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wBACXH,EAAAC,EAAAC,cAAA,OAAKoT,UAAU,cAQjBtT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBAAgB8E,GAAG,YAC5BjF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wBACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,iBAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WACpBjT,EAAAC,EAAAC,cAAA,uBAEHF,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,oFAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,uHAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,gGAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,iEAKJjT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,cAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WACpBjT,EAAAC,EAAAC,cAAA,uBAEHF,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,mHAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,8KAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,qIAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,oDAKJjT,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iCACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,KAAK6S,MAAO,CAAEC,UAAW,WAApC,iBAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WACpBjT,EAAAC,EAAAC,cAAA,uBAEHF,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,0DAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,6DAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,2DAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,0EAGAjT,EAAAC,EAAAC,cAAA,KAAG8S,MAAO,CAAEC,UAAW,WAAvB,mCC/X1B,SAAS8F,GAAWzQ,EAAUqP,GAC5B,OAAO,IAAIxH,IAAK7H,GAElB,IAeegQ,GAfH,WACV,IAAMU,EAAUC,IAGhB,OADAD,EAAQE,SAASC,MAAQ,KAEvBnZ,EAAAC,EAAAC,cAACkZ,EAAA,EAAD,CAAmBL,WAAYA,IAC7B/Y,EAAAC,EAAAC,cAACmZ,EAAA,EAAD,CAAeC,MAAON,GACpBhZ,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,KACEvZ,EAAAC,EAAAC,cAACsZ,GAAD,UCNUC,QACW,cAA7BpK,OAAOqK,SAASC,UAEe,UAA7BtK,OAAOqK,SAASC,UAEhBtK,OAAOqK,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9Z,EAAAC,EAAAC,cAAC6Z,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpU,KAAK,SAAAqU,GACjCA,EAAaC","file":"static/js/main.b2a5da05.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\r\n\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [1, 3, 4, 5, 42, 1337, 0x539, 97],\r\n})","import React, { Component } from \"react\";\r\nimport { injected } from \"./connectors.js\";\r\nimport getWeb3 from \"./getWeb3\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <header class=\"section rd-navbar-wrap\">\r\n      <nav class=\"rd-navbar\">\r\n        <div class=\"navbar-container\">\r\n          <div class=\"navbar-cell\">\r\n            <div class=\"navbar-panel\">\r\n              <button\r\n                class=\"navbar-switch\"\r\n                data-multi-switch='{\"targets\":\".rd-navbar\",\"scope\":\".rd-navbar\",\"isolate\":\"[data-multi-switch]\"}'\r\n              ></button>\r\n              <div class=\"navbar-logo\">\r\n                <h3>DEVIL PORTAL</h3>\r\n                </div>\r\n              \r\n              <p></p>\r\n              {/* <p>Contract: {contract} </p> */}\r\n              <p></p>\r\n            </div>\r\n          </div>\r\n          <div class=\"navbar-spacer\"></div>\r\n          <div class=\"navbar-cell navbar-sidebar\">\r\n            <ul class=\"navbar-navigation rd-navbar-nav fullpage-navigation\">\r\n              <li\r\n                class=\"navbar-navigation-root-item\"\r\n                data-menuanchor=\"ndex.html\"\r\n              >\r\n                <a class=\"navbar-navigation-root-link\" href=\"index.html\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"navbar-cell\">\r\n            <div class=\"navbar-subpanel\">\r\n              <div class=\"navbar-subpanel-item\">\r\n                <button\r\n                  class=\"navbar-button navbar-info-button mdi-dots-vertical\"\r\n                  data-multi-switch='{\"targets\":\".rd-navbar\",\"scope\":\".rd-navbar\",\"class\":\"navbar-info-active\",\"isolate\":\"[data-multi-switch]\"}'\r\n                ></button>\r\n                <div class=\"navbar-info\">\r\n                  {/* {this.state.account === undefined ?  */}\r\n                  <button\r\n                    class=\"btn btn-sm\"\r\n                    onClick={() => {\r\n                      if (props.account === undefined) {\r\n                        props.onPresentConnectModal();\r\n                      } else {\r\n                        props.onPresentAccountModal();\r\n                      }\r\n                    }}\r\n                  >\r\n                    {!props.account ? \"Connect Wallet\" : \" \"}{props.account}\r\n                  </button>\r\n                  {/* :    */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { ConnectorUpdate } from \"@web3-react/types\";\r\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport invariant from \"tiny-invariant\";\r\n\r\ninterface NetworkConnectorArguments {\r\n  urls: { [chainId: number]: string };\r\n  defaultChainId?: number;\r\n}\r\n\r\n// taken from ethers.js, compatible interface with web3 provider\r\ntype AsyncSendable = {\r\n  isMetaMask?: boolean;\r\n  host?: string;\r\n  path?: string;\r\n  sendAsync?: (\r\n    request: any,\r\n    callback: (error: any, response: any) => void\r\n  ) => void;\r\n  send?: (request: any, callback: (error: any, response: any) => void) => void;\r\n};\r\n\r\nclass RequestError extends Error {\r\n  constructor(message: string, public code: number, public data?: unknown) {\r\n    super(message);\r\n  }\r\n}\r\n\r\ninterface BatchItem {\r\n  request: { jsonrpc: \"2.0\"; id: number; method: string; params: unknown };\r\n  resolve: (result: any) => void;\r\n  reject: (error: Error) => void;\r\n}\r\n\r\nclass MiniRpcProvider implements AsyncSendable {\r\n  public readonly isMetaMask: false = false;\r\n\r\n  public readonly chainId: number;\r\n\r\n  public readonly url: string;\r\n\r\n  public readonly host: string;\r\n\r\n  public readonly path: string;\r\n\r\n  public readonly batchWaitTimeMs: number;\r\n\r\n  private nextId = 1;\r\n\r\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null;\r\n\r\n  private batch: BatchItem[] = [];\r\n\r\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\r\n    this.chainId = chainId;\r\n    this.url = url;\r\n    const parsed = new URL(url);\r\n    this.host = parsed.host;\r\n    this.path = parsed.pathname;\r\n    // how long to wait to batch calls\r\n    this.batchWaitTimeMs = 50;\r\n  }\r\n\r\n  public readonly clearBatch = async () => {\r\n    console.info(\"Clearing batch\", this.batch);\r\n    const { batch } = this;\r\n    this.batch = [];\r\n    this.batchTimeoutId = null;\r\n    let response: Response;\r\n    try {\r\n      response = await fetch(this.url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify(batch.map((item) => item.request)),\r\n      });\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) =>\r\n        reject(new Error(\"Failed to send batch call\"))\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!response.ok) {\r\n      batch.forEach(({ reject }) =>\r\n        reject(\r\n          new RequestError(`${response.status}: ${response.statusText}`, -32000)\r\n        )\r\n      );\r\n      return;\r\n    }\r\n\r\n    let json;\r\n    try {\r\n      json = await response.json();\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) =>\r\n        reject(new Error(\"Failed to parse JSON response\"))\r\n      );\r\n      return;\r\n    }\r\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\r\n      memo[current.request.id] = current;\r\n      return memo;\r\n    }, {});\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const result of json) {\r\n      const {\r\n        resolve,\r\n        reject,\r\n        request: { method },\r\n      } = byKey[result.id];\r\n      // @ts-ignore\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      if (resolve && reject) {\r\n        if (\"error\" in result) {\r\n          reject(\r\n            new RequestError(\r\n              result.error.message,\r\n              result.error.code,\r\n              result.error.data\r\n            )\r\n          );\r\n        } else if (\"result\" in result) {\r\n          resolve(result.result);\r\n        } else {\r\n          reject(\r\n            new RequestError(\r\n              `Received unexpected JSON-RPC response to ${method} request.`,\r\n              -32000,\r\n              result\r\n            )\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  public readonly sendAsync = (\r\n    request: {\r\n      jsonrpc: \"2.0\";\r\n      id: number | string | null;\r\n      method: string;\r\n      params?: any;\r\n    },\r\n    callback: (error: any, response: any) => void\r\n  ): void => {\r\n    this.request(request.method, request.params)\r\n      .then((result) =>\r\n        callback(null, { jsonrpc: \"2.0\", id: request.id, result })\r\n      )\r\n      .catch((error) => callback(error, null));\r\n  };\r\n\r\n  public readonly request = async (\r\n    method: string | { method: string; params: unknown[] },\r\n    params?: any\r\n  ): Promise<unknown> => {\r\n    if (typeof method !== \"string\") {\r\n      return this.request(method.method, method.params);\r\n    }\r\n    if (method === \"eth_chainId\") {\r\n      return `0x${this.chainId.toString(16)}`;\r\n    }\r\n    const promise = new Promise((resolve, reject) => {\r\n      this.batch.push({\r\n        request: {\r\n          jsonrpc: \"2.0\",\r\n          id: this.nextId++,\r\n          method,\r\n          params,\r\n        },\r\n        resolve,\r\n        reject,\r\n      });\r\n    });\r\n    if (!this.batchTimeoutId)\r\n      this.batchTimeoutId = setTimeout(this.clearBatch, this.batchWaitTimeMs);\r\n    return promise;\r\n  };\r\n}\r\n\r\nexport class NetworkConnector extends AbstractConnector {\r\n  private readonly providers: { [chainId: number]: MiniRpcProvider };\r\n\r\n  private currentChainId: number;\r\n\r\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\r\n    invariant(\r\n      defaultChainId || Object.keys(urls).length === 1,\r\n      \"defaultChainId is a required argument with >1 url\"\r\n    );\r\n    super({\r\n      supportedChainIds: Object.keys(urls).map((k): number => Number(k)),\r\n    });\r\n\r\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0]);\r\n    this.providers = Object.keys(urls).reduce<{\r\n      [chainId: number]: MiniRpcProvider;\r\n    }>((accumulator, chainId) => {\r\n      accumulator[Number(chainId)] = new MiniRpcProvider(\r\n        Number(chainId),\r\n        urls[Number(chainId)]\r\n      );\r\n      return accumulator;\r\n    }, {});\r\n  }\r\n\r\n  public get provider(): MiniRpcProvider {\r\n    return this.providers[this.currentChainId];\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    return {\r\n      provider: this.providers[this.currentChainId],\r\n      chainId: this.currentChainId,\r\n      account: null,\r\n    };\r\n  }\r\n\r\n  public async getProvider(): Promise<MiniRpcProvider> {\r\n    return this.providers[this.currentChainId];\r\n  }\r\n\r\n  public async getChainId(): Promise<number> {\r\n    return this.currentChainId;\r\n  }\r\n\r\n  public async getAccount(): Promise<null> {\r\n    return null;\r\n  }\r\n\r\n  public deactivate() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default NetworkConnector;\r\n","import { ConnectorNames } from \"@pancakeswap-libs/uikit\";\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\r\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\r\nimport { BscConnector } from \"@binance-chain/bsc-connector\";\r\nimport { NetworkConnector } from \"./NetworkConnector\";\r\nimport WalletConnectProvider from '@walletconnect/web3-provider';\r\n\r\nconst NETWORK_URL = \"https://bsc-dataseed.binance.org/\";\r\n\r\nexport const NETWORK_CHAIN_ID: number = parseInt(\"97\");\r\n\r\nif (typeof NETWORK_URL === \"undefined\") {\r\n  throw new Error(\r\n    `REACT_APP_NETWORK_URL must be a defined environment variable`\r\n  );\r\n}\r\n\r\nexport const network = new NetworkConnector({\r\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n});\r\n\r\nlet networkLibrary: Web3Provider | undefined;\r\nexport function getNetworkLibrary(): Web3Provider {\r\n  if (!networkLibrary)\r\n    networkLibrary = new Web3Provider(walletconnect.walletConnectProvider);\r\n  // eslint-disable-next-line no-return-assign\r\n  return networkLibrary;\r\n}\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [4, 56, 97],\r\n});\r\n\r\nexport const provider = new WalletConnectProvider({\r\n  bridge: 'https://pancakeswap.bridge.walletconnect.org',\r\n  rpc: {\r\n    56: \"https://bsc-dataseed.binance.org/\",\r\n    97: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\r\n  },\r\n  qrcode: true,\r\n  chainId: NETWORK_CHAIN_ID,\r\n});\r\n\r\nexport const bscConnector = new BscConnector({ supportedChainIds: [56, 97] });\r\n\r\n// mainnet only\r\nexport const walletconnect = new WalletConnectConnector({\r\n  bridge: \"https://pancakeswap.bridge.walletconnect.org\",\r\n  qrcode: true,rpc: {\r\n    56: \"https://bsc-dataseed.binance.org/\",\r\n    97: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\r\n  },\r\n  // pollingInterval: 15000,\r\n});\r\n\r\n// mainnet only\r\nexport const walletlink = new WalletLinkConnector({\r\n  url: NETWORK_URL,\r\n  appName: \"Uniswap\",\r\n  appLogoUrl:\r\n    \"https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg\",\r\n});\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n};\r\n","import React, { Component, useEffect, useState, setState, useRef } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport \"./App.css\";\r\nimport DevilVaultAbi from \"../remix_abis/DevilVault.json\";\r\nimport TetherAbi from \"../remix_abis/Tether.json\";\r\nimport RwdAbi from \"../remix_abis/RWD.json\";\r\nimport DevilTokenAbi from \"../remix_abis/DevilToken.json\";\r\nimport { provider, walletconnect } from \"../connectors/index\";\r\nimport { isBrowser } from \"react-device-detect\";\r\n\r\nconst Vault = (props) => {\r\n\r\n  const [networkId, setNetworkId] = React.useState(undefined);\r\n  const [devilToken, setDevilToken] = React.useState([undefined]);\r\n  const [devilTokenAddress, setDevilTokenAddress] = React.useState(\"\");\r\n  const [rwd, setRwd] = React.useState(undefined);\r\n  const [rwdAddress, setRwdAddress] = React.useState(\"\");\r\n  const [rewardTokenAddress, setRewardTokenAddress] = React.useState(\"\");\r\n  const [devilVault, setDevilVault] = React.useState([undefined]);\r\n  const [devilVaultAddress, setDevilVaultAddress] = React.useState(\"\");\r\n  const [devilTokenBalance, setDevilTokenBalance] = React.useState(\"0\");\r\n  const [rwdTokenBalance, setRwdTokenBalance] = React.useState(\"0\");\r\n  const [stakingBalance, setStakingBalance] = React.useState(\"0\");\r\n  const [amountStaked, setAmountStaked] = React.useState(\"0\");\r\n  const [lifetimeRewardsGiven, setLifetimeRewardsGiven] = React.useState(\"0\");\r\n  const [globalStakingBalance, setGlobalStakingBalance] = React.useState(\"0\");\r\n  const [pendingUserRewards, setPendingUserRewards] = React.useState(\"0\");\r\n  const [symbol, setSymbol] = React.useState([undefined]);\r\n  const [rangeval, setRangeval] = useState(null);\r\n  const [updateState, setUpdateState] = React.useState(false);\r\n  const [web3Enabled, setWeb3Enabled] = React.useState(false);\r\n  const inputRef = useRef();\r\n\r\n  //new variables to merge before deploy\r\n  const [pendingUserRewardsBusd, setPendingUserRewardsBusd] = React.useState(\"0\");\r\n  const [pendingUserRewardsDevl, setPendingUserRewardsDevl] = React.useState(\"0\");\r\n  const [inputValue, setInputValue] = React.useState(0);\r\n\r\n  let account = props.account\r\n\r\n  \r\n  // window.web3 = new Web3(window.web3.currentProvider);\r\n  useEffect(() => {\r\n    if (account !== undefined){\r\n      setWeb3Enabled(true);\r\n      window.web3 = new Web3(window.web3 ? window.web3.currentProvider : walletconnect.walletConnectProvider);\r\n    }\r\n    else setWeb3Enabled(false);\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    \r\n    const init = async () => {\r\n\r\n        const web3 = window.web3;\r\n        \r\n        if (account !== undefined) {\r\n          const networkId = await web3.eth.net.getId();\r\n          setNetworkId(networkId);\r\n\r\n          //LOAD devil vault\r\n          const devilVaultAddress = \"0xe12f2f9Bf3939BCe8F41CAd1247924a0B2dda942\";\r\n          setDevilVaultAddress(devilVaultAddress);\r\n          const devilVault = new web3.eth.Contract(\r\n            DevilVaultAbi,\r\n            devilVaultAddress\r\n          );\r\n          setDevilVault(devilVault);\r\n          console.log(devilVault);\r\n\r\n          //Load Devil Token\r\n          const devilTokenAddress = \"0x65aEd7F90a0cF876D496d8093D3F89748ba66b57\";\r\n          setDevilTokenAddress(devilTokenAddress);\r\n          const devilToken = new web3.eth.Contract(\r\n            DevilTokenAbi,\r\n            devilTokenAddress\r\n          );\r\n          setDevilToken(devilToken);\r\n          console.log(devilToken);\r\n        \r\n            //Load our staking state and other account data\r\n    \r\n            let devilTokenBalance = await devilToken.methods.balanceOf(account).call();\r\n            setDevilTokenBalance(devilTokenBalance.toString());\r\n            \r\n            let amountStaked = await devilVault.methods.getUserStaked(account).call();\r\n            setAmountStaked(amountStaked.toString());\r\n    \r\n            let globalStakingBalance = await devilVault.methods.getTotalStaked().call();\r\n            setGlobalStakingBalance(globalStakingBalance.toString());\r\n    \r\n            let pendingUserRewardsBusd = await devilVault.methods.earnedBusd(account).call();\r\n            setPendingUserRewardsBusd(pendingUserRewardsBusd.toString());\r\n    \r\n            let pendingUserRewardsDevl = await devilVault.methods.earnedDevl(account).call();\r\n            setPendingUserRewardsDevl(pendingUserRewardsDevl.toString());\r\n            \r\n        \r\n          //event subscriptions that call update function to sync state variables w/ block chain\r\n\r\n          devilVault.events.Staked({fromBlock: 0})\r\n            .on('data', event => update()\r\n            );\r\n\r\n          devilVault.events.Withdrawn({fromBlock: 0})\r\n            .on('data', event => update()\r\n            );\r\n\r\n          devilVault.events.RewardPaidBusd({fromBlock: 0})\r\n            .on('data', event => update()\r\n            );\r\n\r\n            devilVault.events.RewardPaidDevl({fromBlock: 0})\r\n            .on('data', event => update()\r\n            );\r\n          \r\n          devilVault.events.RewardAddedBusd({fromBlock: 0})\r\n            .on('data', event => update()\r\n            );\r\n\r\n          const updateState = false\r\n          setUpdateState(updateState)\r\n        }\r\n        \r\n    }\r\n    init();\r\n  }, [web3Enabled, amountStaked, setAmountStaked, account]);\r\n\r\n  async function update() {\r\n    \r\n    const init = async () => {\r\n\r\n      const web3 = window.web3;\r\n      \r\n      //LOAD devil vault\r\n      const devilVaultAddress = \"0xe12f2f9Bf3939BCe8F41CAd1247924a0B2dda942\";\r\n      setDevilVaultAddress(devilVaultAddress);\r\n      const devilVault = new web3.eth.Contract(\r\n        DevilVaultAbi,\r\n        devilVaultAddress\r\n      );\r\n      setDevilVault(devilVault);\r\n      console.log(devilVault);\r\n\r\n      //Load Devil Token\r\n      const devilTokenAddress = \"0x65aEd7F90a0cF876D496d8093D3F89748ba66b57\";\r\n      setDevilTokenAddress(devilTokenAddress);\r\n      const devilToken = new web3.eth.Contract(\r\n        DevilTokenAbi,\r\n        devilTokenAddress\r\n      );\r\n      setDevilToken(devilToken);\r\n      console.log(devilToken);\r\n    \r\n      let devilTokenBalance = await devilToken.methods.balanceOf(account).call();\r\n      setDevilTokenBalance(devilTokenBalance.toString());\r\n            \r\n      let amountStaked = await devilVault.methods.getUserStaked(account).call();\r\n      setAmountStaked(amountStaked.toString());\r\n    \r\n      let globalStakingBalance = await devilVault.methods.getTotalStaked().call();\r\n      setGlobalStakingBalance(globalStakingBalance.toString());\r\n    \r\n      let pendingUserRewardsBusd = await devilVault.methods.earnedBusd(account).call();\r\n      setPendingUserRewardsBusd(pendingUserRewardsBusd.toString());\r\n    \r\n      let pendingUserRewardsDevl = await devilVault.methods.earnedDevl(account).call();\r\n      setPendingUserRewardsDevl(pendingUserRewardsDevl.toString());\r\n\r\n    }\r\n    init();\r\n  }\r\n\r\n//   const stakeTokensVault = async (amount) => {\r\n//     setUpdateState(true)\r\n//     amount = window.web3.utils.toWei(amount, 'Ether')\r\n//     // devilToken.methods.approve(devilVault._address, amount).send({from: account}).on('transactionHash', (hash) => { \r\n//     devilVault.methods.stake(amount).send({from: account}).on('transactionHash', (hash) => { \r\n//       })\r\n//     // })\r\n// }\r\n  \r\nconst stakeTokensVault = async (amount) => {\r\n      setUpdateState(true)\r\n      amount = window.web3.utils.toWei(amount, 'Ether')\r\n      devilToken.methods.approve(devilVault._address, amount).send({from: account}).once('receipt', (receipt) => { \r\n      devilVault.methods.stake(amount).send({from: account}) \r\n        })\r\n  }\r\n\r\n  const unstakeTokensVault = (amount) => {\r\n  setUpdateState(true)\r\n  amount = window.web3.utils.toWei(amount, 'Ether')\r\n  devilVault.methods.withdraw(amount).send({from: account}).on('transactionHash', (hash) => {\r\n  })\r\n}\r\n\r\n  const approve = (amount) => {\r\n  amount = window.web3.utils.toWei(amount, 'Ether')\r\n  devilToken.methods.approve(devilVault._address, amount).send({from: account}).on('transactionHash', (hash) => {\r\n  })\r\n}\r\n\r\n  const claimRewards = () => {\r\n  setUpdateState(true)\r\n  devilVault.methods.claim().send({from: account}).on('transactionHash', (hash) => {\r\n  })\r\n}\r\n\r\nif(isBrowser){\r\nreturn (\r\n  <div> \r\n      <div class=\"row row-30 justify-content-left\">\r\n          <div class=\"col-4\">\r\n              <div>\r\n                  Status: <b>{updateState ? 'loading' : 'complete'}</b>\r\n                  <p>Vault v2 - currently on testnet ONLY</p>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      <div class=\"row row-30 justify-content-center\">\r\n          <div class=\"col-4\">\r\n              <div class=\"h3\">\r\n                  TOTAL STAKED   \r\n              </div>\r\n                  <p> {web3Enabled ? globalStakingBalance/1e18 : 0 } DEVL </p>\r\n          </div>\r\n          <div class=\"col-4 justify-content-center\">\r\n              <img class=\"mt-xxl-4\" src=\"assets/media/DEVIL_logo_red_centered.png\" alt=\"\" width=\"674\" height=\"572\"/>\r\n          </div>\r\n              <div class=\"col-4\">\r\n                  <div class=\"h3\" style={{ textAlign: 'right' }}>\r\n                    DEVL REWARDS   \r\n                  </div>\r\n                      <p style={{ textAlign: 'right' }}>{web3Enabled ? pendingUserRewardsDevl/1e18 : 0 } DEVL</p>\r\n              </div>\r\n      </div>\r\n      <div class=\"row row-30 justify-content-center\">\r\n          <div class=\"col-4\">\r\n              <div class=\"h3\">\r\n                  USER STAKED   \r\n              </div>\r\n                  <p> {web3Enabled ? amountStaked/1e18 : 0 } DEVL </p>\r\n          </div>\r\n          <div class=\"col-4 justify-content-center\">\r\n              <form class=\"block block-sm\" data-np-checked=\"1\">\r\n                      {/* <p>Balance: {parseFloat(window.web3.utils.fromWei(devilTokenBalance, 'Ether')).toFixed(5)}</p>  */}\r\n                      <p>{web3Enabled ? devilTokenBalance/1e18 : 0 } DEVL </p>\r\n                  {/* <input type=\"number\" ref={inputRef} className=\"form-control\"/> */}\r\n                  <input type=\"number\" value={inputValue} onChange={e => setInputValue(e.target.value)} className=\"form-control\"/> \r\n                      \r\n                      <button \r\n                        class=\"link\"\r\n                        onClick={(event) => {\r\n                        event.preventDefault()\r\n                        let amount\r\n                        amount = devilTokenBalance.toString()\r\n                        if(amount > 0) { \r\n                        amount = window.web3.utils.fromWei(amount, 'Ether')\r\n                        setInputValue(amount)\r\n                        }}}\r\n                        >Max\r\n                      </button>\r\n                      \r\n                      <button \r\n                          type='submit'\r\n                          onClick={(event) => {\r\n                          event.preventDefault()\r\n                          let amount\r\n                          amount = inputValue\r\n                          // approve(amount) \r\n                          stakeTokensVault(amount)\r\n                          }}\r\n                          className='btn btn-primary btn-lg btn-block'>DEPOSIT\r\n                      </button>\r\n                      \r\n                      <button \r\n                          type='submit'\r\n                          onClick={(event) => {\r\n                          event.preventDefault()\r\n                          let amount\r\n                          amount = inputValue\r\n                          unstakeTokensVault(amount)\r\n                          }}\r\n                          className='btn btn-primary btn-lg btn-block'>WITHDRAW\r\n                      </button> \r\n\r\n                      <button \r\n                          type='submit'\r\n                          onClick={(event) => {\r\n                          event.preventDefault()\r\n                          claimRewards()\r\n                          }}\r\n                          className='btn btn-primary btn-lg btn-block'>CLAIM\r\n                      </button>\r\n                                                  \r\n              </form>\r\n          </div>\r\n              <div class=\"col-4\">\r\n                  <div class=\"h3\" style={{ textAlign: 'right' }}>\r\n                      BUSD REWARDS   \r\n                  </div>\r\n                      <p style={{ textAlign: 'right' }}> {web3Enabled ? pendingUserRewardsBusd/1e18 : 0 } BUSD </p>\r\n              </div>\r\n      </div>\r\n      {/* <div class=\"row row-30 justify-content-left\">\r\n      <p>Address: {props.account && props.account}</p>\r\n      </div> */}\r\n   \r\n                                                        \r\n            {/* <!-- Modal: JUST A CODE SAVE FOR TEMPLATE NOT ACTIVE--> */}\r\n            {/* <div class=\"modal fade\" id=\"modal-login\" tabindex=\"-1\" role=\"dialog\">\r\n                <div class=\"modal-dialog\" role=\"document\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-body text-center\">\r\n                            <h3>Log In</h3>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing</p>\r\n                            <form class=\"rd-mailform\">\r\n                            <div class=\"form-group\">\r\n                                <input class=\"form-control\" type=\"text\" name=\"name\" placeholder=\"Your name *\" data-constraints=\"@Required\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <input class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password *\" data-constraints=\"@Required\" />\r\n                            </div>\r\n                            <div class=\"offset-xxs group-40 d-flex flex-wrap flex-xs-nowrap align-items-center\">\r\n                                <button class=\"btn btn-block\" type=\"submit\">Log in</button>\r\n                            </div>\r\n                            </form>\r\n                        </div>\r\n                    <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n             {/* <!-- Preloader--> */}\r\n            <div class=\"preloader\">\r\n                <div class=\"preloader-inner\">\r\n                    <div class=\"preloader-dot\"></div>\r\n                    <div class=\"preloader-dot\"></div>\r\n                    <div class=\"preloader-dot\"></div>\r\n                    <div class=\"preloader-dot\"></div>\r\n                </div>\r\n            </div>\r\n  </div>    \r\n)} else {\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"col-12 justify-content-center\">\r\n\r\n        <div class=\"row row-30 justify-content-center\">\r\n          <div class=\"h2\" style={{ textAlign: 'center' }}>\r\n            DEVIL'S VAULT\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row row-30 justify-content-center\">\r\n          <p>Status: <b>{updateState ? 'loading' : 'complete'}</b></p>\r\n        </div>\r\n\r\n        <div class=\"row row-30 justify-content-center\">\r\n          <img class=\"mt-xxl-4\" src=\"assets/media/DEVIL_logo_red_centered.png\" alt=\"\" width=\"300\" height=\"300\"/>\r\n        </div>\r\n\r\n        <div class=\"row row-30 justify-content-center\">\r\n          {/* spacer */}\r\n        </div>\r\n\r\n        <div class=\"row-no-gutters justify-content-center\">\r\n          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n            TOTAL STAKED   \r\n          </div>\r\n        </div>\r\n        <div class=\"row-no-gutters justify-content-center\" style={{ textAlign: 'center' }}>\r\n          <p> {web3Enabled ? globalStakingBalance/1e18 : 0 } DEVL </p>\r\n        </div>\r\n\r\n        <div class=\"row row-30 justify-content-center\">\r\n          {/* spacer */}\r\n        </div>\r\n\r\n        <div class=\"row-no-gutters justify-content-center\">\r\n          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n            USER STAKED  \r\n          </div>\r\n        </div>\r\n        <div class=\"row-no-gutters justify-content-center\" style={{ textAlign: 'center' }}>\r\n          <p> {web3Enabled ? amountStaked/1e18 : 0 } DEVL </p>\r\n        </div>\r\n\r\n        <div class=\"row row-30 justify-content-center\">\r\n          {/* spacer */}\r\n        </div>\r\n\r\n        <div class=\"row-no-gutters justify-content-center\">\r\n          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n            DEVL REWARDS   \r\n          </div>\r\n        </div>\r\n        <div class=\"row-no-gutters justify-content-center\" style={{ textAlign: 'center' }}>\r\n          <p>{web3Enabled ? pendingUserRewardsDevl/1e18 : 0 } DEVL</p>\r\n        </div>\r\n\r\n        <div class=\"row row-30 justify-content-center\">\r\n          {/* spacer */}\r\n        </div>\r\n\r\n        <div class=\"row-no-gutters justify-content-center\">\r\n          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n            BUSD REWARDS  \r\n          </div>\r\n        </div>\r\n        <div class=\"row-no-gutters justify-content-center\" style={{ textAlign: 'center' }}>\r\n          <p> {web3Enabled ? pendingUserRewardsBusd/1e18 : 0 } BUSD </p>\r\n        </div>\r\n\r\n        <div class=\"row row-30 justify-content-center\">\r\n          {/* spacer */}\r\n        </div>\r\n\r\n        <div class=\"row-no-gutters justify-content-center\">\r\n          <form class=\"block block-sm\" data-np-checked=\"1\">\r\n            <p>{web3Enabled ? devilTokenBalance/1e18 : 0 } DEVL </p>\r\n              <input type=\"number\" value={inputValue} onChange={e => setInputValue(e.target.value)} className=\"form-control\"/> \r\n                      \r\n                <button \r\n                  class=\"link\"\r\n                  onClick={(event) => {\r\n                  event.preventDefault()\r\n                  let amount\r\n                  amount = devilTokenBalance.toString()\r\n                  if(amount > 0) { \r\n                  amount = window.web3.utils.fromWei(amount, 'Ether')\r\n                  setInputValue(amount)\r\n                  }}}\r\n                  >Max\r\n                  </button>\r\n                      \r\n                <button \r\n                  type='submit'\r\n                  onClick={(event) => {\r\n                  event.preventDefault()\r\n                  let amount\r\n                  amount = inputValue\r\n                  stakeTokensVault(amount)\r\n                  }}\r\n                  className='btn btn-primary btn-lg btn-block'>DEPOSIT\r\n                </button>\r\n                      \r\n                <button \r\n                  type='submit'\r\n                  onClick={(event) => {\r\n                  event.preventDefault()\r\n                  let amount\r\n                  amount = inputValue\r\n                  unstakeTokensVault(amount)\r\n                  }}\r\n                  className='btn btn-primary btn-lg btn-block'>WITHDRAW\r\n                </button> \r\n\r\n                <button \r\n                  type='submit'\r\n                  onClick={(event) => {\r\n                  event.preventDefault()\r\n                  claimRewards()\r\n                  }}\r\n                  className='btn btn-primary btn-lg btn-block'>CLAIM\r\n                 </button>     \r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )}\r\n}\r\n\r\nexport default (Vault);","import React, { Component, useEffect, useState, setState } from \"react\";\r\n\r\nconst RangeSliderDEVL = (props) => {\r\n\r\n    const [rangeval, setRangeval] = useState(0);\r\n    const [displayNum, setDisplaynum] = useState(0);\r\n    // const [sliderMax, setSliderMax] = useState(0);\r\n\r\n    let sliderMax = props.ethBalance*(10**18);\r\n    // let sliderMax = parseFloat(window.web3.utils.fromWei(props.ethBalance, 'Ether')).toFixed(5);\r\n    // setSliderMax(ethBalance);\r\n  \r\n    return (\r\n          <div class=\"slidecontainer\">\r\n        <input type=\"range\" ref={props.inputRef2} className=\"custom-range\" min=\"0\" max={sliderMax} \r\n         onChange={(event) => setRangeval(event.target.value)} />\r\n        {rangeval}\r\n        {/* <p>{parseFloat(window.web3.utils.fromWei(props.ethBalance, 'Ether')).toFixed(5)}</p> */}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default RangeSliderDEVL;","import React, { Component, useEffect, useState, setState, useRef } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport \"./App.css\";\r\nimport DevilTokenAbi from \"../remix_abis/DevilToken.json\";\r\nimport DevilGatewayAbi from \"../remix_abis/Gateway.json\";\r\nimport OnramperWidget from \"@onramper/widget\";\r\nimport DevilVaultAbi from \"../remix_abis/DevilVault.json\"\r\nimport RwdAbi from \"../remix_abis/RWD.json\";\r\nimport OnramperWidgetContainer from \"./Onboarder.js\"\r\nimport RangeSliderDEVL from \"./RangeSlider\";\r\nimport { provider, walletconnect } from '../connectors/index';\r\nimport axios from 'axios';\r\nimport { BrowserView, MobileView, isBrowser, isMobile } from 'react-device-detect';\r\n\r\n\r\nconst Gateway = (props) => {\r\n\r\n  const [networkId, setNetworkId] = React.useState(undefined);\r\n  const [devilTokenAddress, setDevilTokenAddress] = React.useState(\"\");\r\n  const [rwd, setRwd] = React.useState(undefined);\r\n  const [rwdAddress, setRwdAddress] = React.useState(\"\");\r\n  const [rewardTokenAddress, setRewardTokenAddress] = React.useState(\"\");\r\n  const [devilGateway, setDevilGateway] = React.useState([undefined]);\r\n  const [devilGatewayAddress, setDevilGatewayAddress] = React.useState(\"\");\r\n  const [devilTokenBalance, setDevilTokenBalance] = React.useState(\"0\");\r\n  const [ethBalance, setEthBalance] = React.useState(\"0\");\r\n  \r\n  const [updateState, setUpdateState] = React.useState(false);\r\n  const [web3Enabled, setWeb3Enabled] = React.useState(false);\r\n  const inputRef = useRef();\r\n  const inputRef2 = useRef();\r\n  const [inputValueTransfer, setInputValueTransfer] = React.useState(0);\r\n  const [inputValueBuy, setInputValueBuy] = React.useState(0);\r\n  const [inputValueSell, setInputValueSell] = React.useState(0);\r\n\r\n  const [data, setData] = React.useState([]);\r\n  const [price, setPrice] = React.useState(\"\");\r\n\r\n  // const APIKEY = process.env.REACT_APP_API_KEY\r\n  const APIKEY = 'pk_prod_H2r9uOFoPvXZRouc0brXKBhL8jEYJKtivAgsAbLxUL40';\r\n\r\n  let account = props.account\r\n  let devilToken = props.devilToken;\r\n\r\n  // window.web3 = new Web3(window.web3.currentProvider);\r\n  useEffect(() => {\r\n    if (account !== undefined){\r\n      setWeb3Enabled(true);\r\n      window.web3 = new Web3(window.web3 ? window.web3.currentProvider : walletconnect.walletConnectProvider);\r\n    }\r\n    else setWeb3Enabled(false);\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    \r\n    const init = async () => {\r\n\r\n        const web3 = window.web3;\r\n        if (web3Enabled) {\r\n          const networkId = await web3.eth.net.getId();\r\n          setNetworkId(networkId);\r\n\r\n          //LOAD devil gateway\r\n          const devilGatewayAddress = \"0x1C781CE11522dCDCc1C082606Eb3c67231624FEd\";\r\n          setDevilGatewayAddress(devilGatewayAddress);\r\n          const devilGateway = new web3.eth.Contract(\r\n            DevilGatewayAbi,\r\n            devilGatewayAddress\r\n          );\r\n          setDevilGateway(devilGateway);\r\n          console.log(devilGateway);\r\n\r\n          //Load price through axois query\r\n          axios.get('https://api.coingecko.com/api/v3/coins/binance-smart-chain/contract/0xD280e0Fea29BcAe6ED9DD9fb4B9e5Fa90F5C249D')\r\n          .then(res => {\r\n          setData(res.data);\r\n          console.log(res.data);\r\n          setPrice(res.data.market_data.current_price.usd);\r\n          })\r\n\r\n\r\n          //Load our staking state and other account data\r\n          await getTokenBalance(devilToken);\r\n\r\n          await window.web3.eth.getBalance(account).then((ethBalance) => {\r\n            setEthBalance(ethBalance);\r\n          });\r\n          //event subscriptions that call update function to sync state variables w/ block chain\r\n\r\n          devilGateway.events.DEVLPurchased({fromBlock: 0})\r\n            .on('data', event => update()\r\n          );\r\n\r\n          devilGateway.events.DEVLSold({fromBlock: 0})\r\n            .on('data', event => update()\r\n          );\r\n\r\n          const updateState = false\r\n          setUpdateState(updateState)\r\n        }\r\n        \r\n    }\r\n    init();\r\n  }, [web3Enabled, devilTokenBalance, ethBalance]);\r\n\r\n  async function getTokenBalance(contract) {\r\n    try {\r\n      const devilTokenBalance = await contract.methods.balanceOf(account).call();\r\n      setDevilTokenBalance(devilTokenBalance.toString());\r\n    } catch (error) {\r\n      console.log(\"catch\", error);\r\n    }\r\n  }\r\n    \r\n  async function update() {\r\n    \r\n    const init = async () => {\r\n\r\n      const web3 = window.web3;\r\n      let devilTokenBalance = await devilToken.methods.balanceOf(account).call();\r\n          setDevilTokenBalance(devilTokenBalance.toString());\r\n\r\n      let ethBalance = await web3.eth.getBalance(account);\r\n          setEthBalance(ethBalance);\r\n\r\n    }\r\n    init();\r\n  }\r\n\r\n  const buyDevl = (amount) => {\r\n    const web3 = window.web3;\r\n    web3.eth.sendTransaction({\r\n      from: account,\r\n      to: devilGatewayAddress,\r\n      value: amount,\r\n  })\r\n  }\r\n  \r\n  const sellDevl = (amount) => {\r\n    setUpdateState(true)\r\n    amount = window.web3.utils.toWei(amount, 'Ether')\r\n    devilToken.methods.approve(devilGateway._address, amount).send({from: account}).on('transactionHash', (hash) => {\r\n    devilGateway.methods.sellDevl(amount).send({gasLimit: 10000000, from: account})\r\n    })\r\n  }\r\n  \r\n  // const transferDevl = (amount, receiver) => {\r\n  //   setUpdateState(true)\r\n  //   amount = window.web3.utils.toWei(amount, 'Ether')\r\n  //   devilToken.methods.approve(devilGateway._address, amount).send({from: account}).on('transactionHash', (hash) => {\r\n  //   gatewayTransfer.methods.transferDevl(amount, receiver).send({from: account})\r\n  //   })\r\n  // }\r\n        if(isBrowser) {\r\n          return (\r\n          \r\n            <div> \r\n              <div class=\"row row-30 justify-content-left\">\r\n                <div class=\"col-3\">\r\n                    <div>\r\n                      Status: <b>{updateState ? 'loading' : 'complete'}</b>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-3\">\r\n                  {/* Spacer */}\r\n                </div>\r\n                <div class=\"col-3\">\r\n                  {/* Spacer */}\r\n                </div>\r\n                <div class=\"col-3\">\r\n                  <button class=\"btn btn-primary btn-sm btn-block\" data-modal-trigger='{\"target\":\"#modal-login\"}'>BUY CRYPTO</button>\r\n                </div>\r\n              </div>\r\n                <div class=\"row row-30 justify-content-center\">\r\n                  <div class=\"h2\" style={{ textAlign: 'center' }}>\r\n                  DEVIL'S GATEWAY\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row row-30 justify-content-center\">\r\n                    <div class=\"col-2 justify-content-center\">\r\n                        {/* Spacer */}\r\n                    </div>\r\n                    <div class=\"col-2 justify-content-center\">\r\n                        <div>\r\n                          <img class=\"mt-xxl-4\" src=\"assets/media/DEVIL_logo_red_centered.png\" alt=\"\" width=\"300\" height=\"300\" />\r\n                        </div>\r\n                        <div>\r\n                          <p style={{ textAlign: 'center' }}>Balance</p>  \r\n                          <p style={{ textAlign: 'center' }}>{web3Enabled ? parseFloat(window.web3.utils.fromWei(devilTokenBalance, 'Ether')).toFixed(5) : 0} DEVL</p>\r\n                          <p>  </p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-4 justify-content-center\">\r\n                        <div class=\"row row-30 justify-content-center\">\r\n                          <div class=\"h4\" style={{ textAlign: 'center' }}>\r\n                           PRICE\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row row-30 justify-content-center\">\r\n                          <div>\r\n                            {/* {/* <p style={{ textAlign: 'center' }}>N/A</p> */}\r\n                            <p style={{ textAlign: 'center' }}>${price} USD</p>\r\n                          </div>\r\n                      </div>\r\n                        <div class=\"row row-30 justify-content-center\">\r\n                          {/* spacer */}\r\n                        </div>\r\n                        <div div class=\"row row-30 justify-content-center\">        \r\n                    </div>\r\n                    </div>\r\n                    \r\n                    <div class=\"col-2 justify-content-center\">\r\n                        <div>\r\n                          <img class=\"mt-xxl-4\"  src=\"assets/media/bnb_logo_centered.png\" alt=\"\" width=\"300\" height=\"300\" />  \r\n                        </div>\r\n                        <div>\r\n                          <p style={{ textAlign: 'center' }}>Balance</p>\r\n                          <p style={{ textAlign: 'center' }}>{web3Enabled ? parseFloat(window.web3.utils.fromWei(ethBalance, 'Ether')).toFixed(5) : 0} BNB</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-2 justify-content-center\">\r\n                        {/* Spacer */}\r\n                    </div>\r\n                </div>\r\n                <div class=\"row row-30 justify-content-center\">\r\n                  <div class=\"col-2\"></div>\r\n                  <div class=\"col-3 justify-content-center\">\r\n                  <form class=\"block block-sm\" data-np-checked=\"1\">\r\n                          <input type=\"number\" value={inputValueBuy} onChange={e => setInputValueBuy(e.target.value)} className=\"form-control\"/>\r\n                                <button \r\n                                  class=\"link\"\r\n                                  onClick={(event) => {\r\n                                  event.preventDefault()\r\n                                  let amount\r\n                                  amount = ethBalance.toString()\r\n                                  if(amount > 0) {\r\n                                  amount = window.web3.utils.fromWei(amount, 'Ether')\r\n                                  setInputValueBuy(amount)\r\n                                  }}}\r\n                                  >Max\r\n                                </button>\r\n                                  <button \r\n                                      type='submit'\r\n                                      onClick={(event) => {\r\n                                      event.preventDefault()\r\n                                      let amount\r\n                                      amount = inputValueBuy\r\n                                      amount = window.web3.utils.toWei(amount, 'Ether')\r\n                                      buyDevl(amount)\r\n                                      }}\r\n                                      className='btn btn-primary btn-lg btn-block'>BUY DEVL\r\n                                  </button>  \r\n                          </form>\r\n                          </div>\r\n                        <div class=\"col-2\"></div>\r\n                        <div class=\"col-3 justify-content-center\">\r\n                        <form class=\"block block-sm\" data-np-checked=\"1\">\r\n                            <input type=\"number\" value={inputValueSell} onChange={e => setInputValueSell(e.target.value)} className=\"form-control\"/>\r\n                                <button \r\n                                  class=\"link\"\r\n                                  onClick={(event) => {\r\n                                  event.preventDefault()\r\n                                  let amount\r\n                                  amount = devilTokenBalance.toString()\r\n                                  if(amount > 0) {\r\n                                  amount = window.web3.utils.fromWei(amount, 'Ether')\r\n                                  setInputValueSell(amount)\r\n                                  }}}\r\n                                  >Max\r\n                                </button>\r\n                            <button \r\n                                    type='submit'\r\n                                    onClick={(event) => {\r\n                                    event.preventDefault()\r\n                                    let amount\r\n                                    amount = inputValueSell\r\n                                    // amount = window.web3.utils.toWei(amount, 'Ether')\r\n                                    sellDevl(amount)\r\n                                    }}\r\n                                    className='btn btn-primary btn-lg btn-block'>SELL DEVL\r\n                            </button>\r\n                        </form>                          \r\n                        </div>\r\n                    <div class=\"col-2 justify-content-center\">\r\n                        {/* Spacer */}\r\n                    </div>\r\n                    <div class=\"col-2 justify-content-center\">   \r\n                    </div>\r\n                    <div class=\"col-2 justify-content-center\"> \r\n                    </div>\r\n                    <div class=\"col-2 justify-content-center\">\r\n                        {/* Spacer */}\r\n                    </div>\r\n                </div>\r\n                <div class=\"row row-30 justify-content-center\">   \r\n                \r\n                      <div class=\"modal fade\" id=\"modal-login\" tabindex=\"-1\" role=\"dialog\">\r\n                          <div class=\"modal-dialog\" role=\"document\">\r\n                              <div class=\"modal-content\">\r\n                              {/* <article class=\"blurb blurb-boxed\"> */}\r\n                                <div\r\n                                  style={{\r\n                                    width: \"600px\",\r\n                                    height: \"600px\",\r\n                                    boxShadow: \"0 2px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n                                    borderRadius: \"10px\",\r\n                                    margin: \"auto\",\r\n                                    color: \"#000003\"\r\n                                  }}\r\n                                >\r\n                                  <OnramperWidget\r\n                                    color= \"#000003\"\r\n                                    defaultAmount={100}\r\n                                    // defaultAddrs={account}\r\n                                    API_KEY={APIKEY}\r\n                                    filters={{\r\n                                      onlyCryptos: [\"BNB_BEP20\"]\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              {/* </article> */}\r\n                              <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>\r\n                              </div>\r\n                          </div>\r\n                        </div>\r\n                       {/* <!-- Preloader--> */}\r\n                       </div>\r\n                      <div class=\"preloader\">\r\n                          <div class=\"preloader-inner\">\r\n                              <div class=\"preloader-dot\"></div>\r\n                              <div class=\"preloader-dot\"></div>\r\n                              <div class=\"preloader-dot\"></div>\r\n                              <div class=\"preloader-dot\"></div>\r\n                          </div>\r\n                      </div>\r\n            </div>           \r\n          )} else {\r\n            return(\r\n              <div>\r\n                <div class=\"col-12 justify-content-center\">\r\n                  \r\n                  <div class=\"row row-30 justify-content-center\">\r\n                    <div class=\"h2\" style={{ textAlign: 'center' }}>\r\n                      DEVIL'S GATEWAY\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row row-30 justify-content-center\">\r\n                    <div> \r\n                      Status: <b>{updateState ? 'loading' : 'complete'}</b>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row row-30 justify-content-center\">\r\n                    <div class=\"h4\" style={{ textAlign: 'center' }}>\r\n                      PRICE\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row row-30 justify-content-center\">\r\n                    <p style={{ textAlign: 'center' }}>${price} USD</p>\r\n                  </div>\r\n\r\n                  <div class=\"row row-30 justify-content-center\">\r\n                    <div class=\"col-6 justify-content-center\">\r\n                      <div>\r\n                        <img class=\"mt-xxl-4\" src=\"assets/media/DEVIL_logo_red_centered.png\" alt=\"\" width=\"125\" height=\"125\" />\r\n                        <p style={{ textAlign: 'center' }}>Balance</p>\r\n                        <p style={{ textAlign: 'center' }}>{web3Enabled ? parseFloat(window.web3.utils.fromWei(devilTokenBalance, 'Ether')).toFixed(5) : 0} DEVL</p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-6 justify-content-center\">\r\n                      <div>\r\n                        <img class=\"mt-xxl-4\"  src=\"assets/media/bnb_logo_centered.png\" alt=\"\" width=\"125\" height=\"125\" />\r\n                        <p style={{ textAlign: 'center' }}>Balance</p>\r\n                        <p style={{ textAlign: 'center' }}>{web3Enabled ? parseFloat(window.web3.utils.fromWei(ethBalance, 'Ether')).toFixed(5) : 0} BNB</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row row-30 justify-content-center\">\r\n                    <div>\r\n                      <form class=\"block block-sm\" data-np-checked=\"1\">\r\n                        <input type=\"number\" value={inputValueBuy} onChange={e => setInputValueBuy(e.target.value)} className=\"form-control\"/>\r\n                          <button \r\n                            class=\"link\"\r\n                            onClick={(event) => {\r\n                            event.preventDefault()\r\n                            let amount\r\n                            amount = ethBalance.toString()\r\n                            if(amount > 0) {\r\n                            amount = window.web3.utils.fromWei(amount, 'Ether')\r\n                            setInputValueBuy(amount)\r\n                            }}}\r\n                            >Max\r\n                          </button>\r\n                          <button \r\n                            type='submit'\r\n                            onClick={(event) => {\r\n                            event.preventDefault()\r\n                            let amount\r\n                            amount = inputValueBuy\r\n                            amount = window.web3.utils.toWei(amount, 'Ether')\r\n                            buyDevl(amount)\r\n                            }}\r\n                            className='btn btn-primary btn-sm btn-block'>BUY DEVL\r\n                          </button>  \r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row row-30 justify-content-center\">\r\n                    <div>\r\n                      <form class=\"block block-sm\" data-np-checked=\"1\">\r\n                        <input type=\"number\" value={inputValueSell} onChange={e => setInputValueSell(e.target.value)} className=\"form-control\"/>\r\n                          <button \r\n                          class=\"link\"\r\n                          onClick={(event) => {\r\n                          event.preventDefault()\r\n                          let amount\r\n                          amount = devilTokenBalance.toString()\r\n                          if(amount > 0) {\r\n                          amount = window.web3.utils.fromWei(amount, 'Ether')\r\n                          setInputValueSell(amount)\r\n                          }}}\r\n                          >Max\r\n                          </button>\r\n                          <button \r\n                            type='submit'\r\n                            onClick={(event) => {\r\n                            event.preventDefault()\r\n                            let amount\r\n                            amount = inputValueSell\r\n                            // amount = window.web3.utils.toWei(amount, 'Ether')\r\n                            sellDevl(amount)\r\n                            }}\r\n                            className='btn btn-primary btn-sm btn-block'>SELL DEVL\r\n                          </button>\r\n                      </form>                \r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row row-30 justify-content-center\">\r\n                    <div> \r\n                      <button class=\"btn btn-primary btn-lg btn-block\" data-modal-trigger='{\"target\":\"#modal-login\"}'>BUY CRYPTO</button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"modal fade\" id=\"modal-login\" tabindex=\"-1\" role=\"dialog\">\r\n                          <div class=\"modal-dialog\" role=\"document\">\r\n                              <div class=\"modal-content\">\r\n                              {/* <article class=\"blurb blurb-boxed\"> */}\r\n                                <div\r\n                                  style={{\r\n                                    width: \"300px\",\r\n                                    height: \"600px\",\r\n                                    boxShadow: \"0 2px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n                                    borderRadius: \"10px\",\r\n                                    margin: \"auto\",\r\n                                    color: \"#000003\"\r\n                                  }}\r\n                                >\r\n                                  <OnramperWidget\r\n                                    color= \"#000003\"\r\n                                    defaultAmount={100}\r\n                                    // defaultAddrs={account}\r\n                                    API_KEY={APIKEY}\r\n                                    filters={{\r\n                                      onlyCryptos: [\"BNB_BEP20\"]\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              {/* </article> */}\r\n                              <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>\r\n                              </div>\r\n                          </div>\r\n                        </div>\r\n                  \r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n            \r\n\r\n        }\r\n  \r\n\r\n\r\n\r\nexport default (Gateway);\r\n\r\n// {/* //TEST API KEY: pk_test_lQP0Ao0cFm1bEbY2CGrdv3JVzcUSJUlF1D8gF25Mnsw0 */}\r\n\r\n\r\n\r\n ","import { useCallback } from \"react\";\r\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\r\nimport { NoBscProviderError } from \"@binance-chain/bsc-connector\";\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from \"@web3-react/injected-connector\";\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from \"@web3-react/walletconnect-connector\";\r\nimport {\r\n  connectorLocalStorageKey,\r\n  ConnectorNames,\r\n} from \"@pancakeswap-libs/uikit\";\r\n\r\nimport { connectorsByName } from \"../connectors/index\";\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React();\r\n  // const { toastError } = useToast();\r\n  // @ts-ignore\r\n  const toastError = (err, ...args) => alert(err + \": \" + args.join(\" - \"));\r\n\r\n  const login = useCallback((connectorID: ConnectorNames) => {\r\n    const connector = connectorsByName[connectorID];\r\n    if (connector) {\r\n      console.log(connector);\r\n      activate(connector, async (error: Error) => {\r\n        window.localStorage.removeItem(connectorLocalStorageKey);\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          toastError(\r\n            \"Unsupported Chain Id\",\r\n            \"Unsupported Chain Id Error. Check your chain Id.\"\r\n          );\r\n        } else if (\r\n          error instanceof NoEthereumProviderError ||\r\n          error instanceof NoBscProviderError\r\n        ) {\r\n          toastError(\"Provider Error\", \"No provider was found\");\r\n        } else if (\r\n          error instanceof UserRejectedRequestErrorInjected ||\r\n          error instanceof UserRejectedRequestErrorWalletConnect\r\n        ) {\r\n          if (connector instanceof WalletConnectConnector) {\r\n            const walletConnector = connector as WalletConnectConnector;\r\n            walletConnector.walletConnectProvider = null;\r\n          }\r\n          toastError(\r\n            \"Authorization Error\",\r\n            \"Please authorize to access your account\"\r\n          );\r\n        } else {\r\n          toastError(error.name, error.message);\r\n        }\r\n      });\r\n    } else {\r\n      toastError(\"Can't find connector\", \"The connector config is wrong\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return { login, logout: deactivate };\r\n};\r\n\r\nexport default useAuth;\r\n","import React, { Component, useEffect, useState, setState, useRef } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"./App.css\";\r\nimport Vault from \"./Vault.js\";\r\nimport Gateway from \"./Gateway\"\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport { useWalletModal } from \"@pancakeswap-libs/uikit\";\r\nimport Governance from \"./Governance\";\r\nimport { provider, walletconnect } from '../connectors/index';\r\nimport DevilTokenAbi from \"../remix_abis/DevilToken.json\";\r\nimport DevilGatewayAbi from \"../remix_abis/Gateway.json\";\r\nimport { BrowserView, MobileView, isBrowser, isMobile } from 'react-device-detect';\r\n\r\nfunction App() {\r\n\r\n  const { login, logout } = useAuth();\r\n  const { account, web3 } = useWeb3React();\r\n  const { onPresentConnectModal, onPresentAccountModal } = useWalletModal(\r\n    login,\r\n    logout,\r\n    account || undefined\r\n  );\r\n  console.log(account);\r\n\r\n  //Blockchain Data State Variables - General\r\n  const [web3Enabled, setWeb3Enabled] = React.useState(false);\r\n  const [networkId, setNetworkId] = React.useState(undefined);\r\n  const [devilToken, setDevilToken] = React.useState([undefined]);\r\n  const [devilTokenAddress, setDevilTokenAddress] = React.useState(\"\");\r\n  const [devilTokenBalance, setDevilTokenBalance] = React.useState(\"0\");\r\n  const [rwd, setRwd] = React.useState(undefined);\r\n  const [rwdAddress, setRwdAddress] = React.useState(\"\");\r\n  const [rewardTokenAddress, setRewardTokenAddress] = React.useState(\"\");\r\n  const [rwdTokenBalance, setRwdTokenBalance] = React.useState(\"0\");\r\n  const [ethBalance, setEthBalance] = React.useState(\"0\");\r\n  const [updateState, setUpdateState] = React.useState(false);\r\n\r\n  //Blockchain Datat State Variables - Devil's Gateway\r\n  const [devilGateway, setDevilGateway] = React.useState([undefined]);\r\n  \r\n  //load blockchain data\r\n\r\n  useEffect(() => {\r\n    if (account !== undefined){\r\n      setWeb3Enabled(true);\r\n      window.web3 = new Web3(window.web3 ? window.web3.currentProvider : walletconnect.walletConnectProvider);\r\n    }\r\n    else setWeb3Enabled(false);\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    \r\n    const init = async () => {\r\n\r\n        const web3 = window.web3;\r\n        if (web3Enabled) {\r\n          const networkId = await web3.eth.net.getId();\r\n          setNetworkId(networkId);\r\n\r\n          //Load Devil Token\r\n          const devilTokenAddress = \"0x65aEd7F90a0cF876D496d8093D3F89748ba66b57\";\r\n          setDevilTokenAddress(devilTokenAddress);\r\n          const devilToken = new web3.eth.Contract(\r\n            DevilTokenAbi,\r\n            devilTokenAddress\r\n          );\r\n          setDevilToken(devilToken);\r\n          console.log(devilToken);\r\n\r\n          //Load our state and other account data\r\n          await getTokenBalance(devilToken);\r\n\r\n        }\r\n    }\r\n    init();\r\n    }, [web3Enabled, devilTokenBalance, ethBalance]);\r\n\r\n    async function getTokenBalance(contract) {\r\n      try {\r\n        const devilTokenBalance = await contract.methods.balanceOf(account).call();\r\n        setDevilTokenBalance(devilTokenBalance.toString());\r\n      } catch (error) {\r\n        console.log(\"catch\", error);\r\n      }\r\n    }\r\n\r\n  if(isBrowser){  \r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar\r\n          account={account}\r\n          onPresentConnectModal={onPresentConnectModal}\r\n          onPresentAccountModal={onPresentAccountModal}\r\n        />\r\n        <main role=\"main\" className=\"col-12 justify-content-center\">\r\n          <div class=\"page\">\r\n            <section class=\"section-lg section-one-screen\">\r\n              <div class=\"container\">\r\n                <div class=\"tab tab-line\">\r\n                  <ul class=\"nav nav-line biggest\">\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a class=\"nav-link active show\" href=\"#tabs-1-1\" data-toggle=\"tab\">\r\n                        Gateway\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a class=\"nav-link\" href=\"#tabs-1-2\" data-toggle=\"tab\">\r\n                        Vault\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a class=\"nav-link\" href=\"#tabs-1-3\" data-toggle=\"tab\">\r\n                        Lock\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a class=\"nav-link\" href=\"#tabs-1-4\" data-toggle=\"tab\">\r\n                        Information\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"tab-content\">\r\n                  <div class=\"tab-pane fade active show\" id=\"tabs-1-1\">\r\n                    <div class=\"box px-sm-4 px-xl-4 px-xxl-4\">\r\n                      <div className=\"content\">\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        {/* <p><p2>{account}</p2></p> */}\r\n                        <p></p>\r\n                      </div>\r\n                        <Gateway\r\n                          account={account}\r\n                          web3={web3}\r\n                          devilGateway ={devilGateway}\r\n                          devilToken = {devilToken}\r\n                        />  \r\n                        {/* <Vault\r\n                          account={account}\r\n                          web3={web3}\r\n                        /> */}\r\n                      </div>\r\n                      {/* <!-- Tab panes--> */}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"tabs-1-2\">\r\n                    <div class=\"box px-xl-4 px-xxl-4\">\r\n                    <div className=\"content\">\r\n                      <Vault\r\n                          account={account}\r\n                          web3={web3}\r\n                          devilToken = {devilToken}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"tabs-1-3\">\r\n                    <div class=\"box px-xl-4 px-xxl-4\">\r\n                    <div className=\"content\">\r\n                      {/* <Governance \r\n                          account={account}\r\n                          web3={web3}\r\n                        /> */}\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"tabs-1-4\">\r\n                    <div class=\"box px-xl-4 px-xxl-4\">\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        <div class=\"col-10 justify-content-center\">\r\n                          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n                              DEVIL'S VAULT   \r\n                          </div>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             <b>Version 2</b>\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Deposit your DEVL in order to earn your share of the 3% tax in the form of BUSD.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Global Staked refers to the total DEVL currently staked, while User Staked refers to your personal staking balance.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Lifetime Rewards tracks the total amount of BUSD awarded to all holders since the beginning.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Pending Rewards indicates the amount of BUSD you can claim.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        <div class=\"col-10 justify-content-center\">\r\n                          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n                              DEVIL LOCK  \r\n                          </div>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             <b>Version 1</b>\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Allows users to vote on when the contract can be unlocked, allowing the DEVL team to make changes to the token.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             The information at the top inform you if the contract is locked or unlocked, when locked, the token's functions cannot be called by the DEVL team until a successful vote.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Total Support and Total Oppose track the total votes in favor or in opposition to the DEVL team's request to unlock the contract.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             User Support and User Oppose track your votes.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        <div class=\"col-10 justify-content-center\">\r\n                          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n                              DEVIL GATEWAY \r\n                          </div>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             <b>Version 1</b>\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             To buy DEVL - enter the amount of BNB you wish to use.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             To sell DEVL - enter the amount of DEVL you wish to sell.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             To onramp fiat for BSC BNB (BEP-20), click \"Buy Crypto\"\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Note: Price information coming after launch when connection available.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    </div>\r\n                  \r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </>\r\n  )} else{\r\n  \r\n    return(\r\n      <div>\r\n        <Navbar\r\n          account={account}\r\n          onPresentConnectModal={onPresentConnectModal}\r\n          onPresentAccountModal={onPresentAccountModal}\r\n        />\r\n\r\n        <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\">\r\n          <div class=\"page-mobile\">\r\n            <section class=\"section-mobile\">\r\n              <div class=\"container\">\r\n                <div class=\"tab tab-line\">\r\n                  <ul class=\"nav nav-line biggest\">\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a class=\"nav-link active show\" href=\"#tabs-1-1\" data-toggle=\"tab\">\r\n                        Gateway\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a class=\"nav-link\" href=\"#tabs-1-2\" data-toggle=\"tab\">\r\n                        Vault\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a class=\"nav-link\" href=\"#tabs-1-3\" data-toggle=\"tab\">\r\n                        Lock\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a class=\"nav-link\" href=\"#tabs-1-4\" data-toggle=\"tab\">\r\n                        Information\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n\r\n                <div class=\"tab-content\">\r\n                  <div class=\"tab-pane fade active show\" id=\"tabs-1-1\">\r\n                    <div class=\"box-mobile\">\r\n                      <div className=\"content\">\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        {/* <p><p2>{account}</p2></p> */}\r\n                        <p></p>\r\n                      </div>\r\n                        <Gateway\r\n                          account={account}\r\n                          web3={web3}\r\n                          devilGateway ={devilGateway}\r\n                          devilToken = {devilToken}\r\n                        />  \r\n                      </div>\r\n                      {/* <!-- Tab panes--> */}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"tabs-1-2\">\r\n                    <div class=\"box px-xl-4 px-xxl-4\">\r\n                    <div className=\"content\">\r\n                      <Vault\r\n                          account={account}\r\n                          web3={web3}\r\n                          devilToken = {devilToken}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"tabs-1-3\">\r\n                    <div class=\"box px-xl-4 px-xxl-4\">\r\n                    <div className=\"content\">\r\n                      {/* <Governance \r\n                          account={account}\r\n                          web3={web3}\r\n                        /> */}\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"tabs-1-4\">\r\n                    <div class=\"box px-xl-4 px-xxl-4\">\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        <div class=\"col-10 justify-content-center\">\r\n                          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n                              DEVIL'S VAULT   \r\n                          </div>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             <b>Version 1</b>\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Deposit your DEVL in order to earn your share of the 3% tax in the form of BUSD.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Global Staked refers to the total DEVL currently staked, while User Staked refers to your personal staking balance.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Lifetime Rewards tracks the total amount of BUSD awarded to all holders since the beginning.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Pending Rewards indicates the amount of BUSD you can claim.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        <div class=\"col-10 justify-content-center\">\r\n                          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n                              DEVIL LOCK  \r\n                          </div>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             <b>Version 1</b>\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Allows users to vote on when the contract can be unlocked, allowing the DEVL team to make changes to the token.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             The information at the top inform you if the contract is locked or unlocked, when locked, the token's functions cannot be called by the DEVL team until a successful vote.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Total Support and Total Oppose track the total votes in favor or in opposition to the DEVL team's request to unlock the contract.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             User Support and User Oppose track your votes.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        <div class=\"col-10 justify-content-center\">\r\n                          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n                              DEVIL GATEWAY \r\n                          </div>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             <b>Version 1</b>\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             To buy DEVL - enter the amount of BNB you wish to use.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             To sell DEVL - enter the amount of DEVL you wish to sell.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             To onramp fiat for BSC BNB (BEP-20), click \"Buy Crypto\"\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Note: Price information coming after launch when connection available.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Last Update: 12/06/21\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    </div>\r\n                  \r\n                </div>\r\n                \r\n              </div>\r\n            </section>\r\n          </div>\r\n        </main>\r\n\r\n\r\n      </div>\r\n  )}\r\n}\r\n\r\nexport { App };\r\n","import { ModalProvider } from \"@pancakeswap-libs/uikit\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { light, dark } from \"@pancakeswap-libs/uikit\";\r\nimport { Web3ReactProvider } from \"@web3-react/core\";\r\nimport React from \"react\";\r\nimport { App as ComponentApp } from \"./components/App\";\r\nimport Web3 from \"web3\";\r\nfunction getLibrary(provider, connector) {\r\n  return new Web3(provider); // this will vary according to whether you use e.g. ethers or web3.js\r\n}\r\nconst App = () => {\r\n  const SCTheme = dark;\r\n  // @ts-ignore\r\n  SCTheme.zIndices.modal = 1001;\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <ThemeProvider theme={SCTheme}>\r\n        <ModalProvider>\r\n          <ComponentApp />\r\n        </ModalProvider>\r\n      </ThemeProvider>\r\n    </Web3ReactProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}